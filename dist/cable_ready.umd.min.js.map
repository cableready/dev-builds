{"version":3,"file":"cable_ready.umd.min.js","sources":["../javascript/enums.js","../javascript/active_element.js","../javascript/utils.js","../javascript/plugins.js","../javascript/morph_callbacks.js","../javascript/operations.js","../javascript/operation_store.js","../javascript/missing_element.js","../javascript/cable_ready.js","../javascript/cable_consumer.js","../javascript/elements/cable_ready_element.js","../javascript/elements/subscribing_element.js","../javascript/elements/stream_from_element.js","../javascript/elements/updates_for_element.js","../javascript/updatable/inner_updates_compat.js","../javascript/index.js","../javascript/elements/index.js"],"sourcesContent":["export const inputTags = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true\n}\n\nexport const mutableTags = {\n  INPUT: true,\n  TEXTAREA: true,\n  OPTION: true\n}\n\nexport const textInputTypes = {\n  'datetime-local': true,\n  'select-multiple': true,\n  'select-one': true,\n  color: true,\n  date: true,\n  datetime: true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  textarea: true,\n  time: true,\n  url: true,\n  week: true\n}\n","let activeElement\n\nexport default {\n  get element () {\n    return activeElement\n  },\n  set (element) {\n    activeElement = element\n  }\n}\n","import { inputTags, textInputTypes } from './enums'\nimport ActiveElement from './active_element'\n\n// Indicates if the passed element is considered a text input.\n//\nconst isTextInput = element => {\n  return inputTags[element.tagName] && textInputTypes[element.type]\n}\n\n// Assigns focus to the appropriate element... preferring the explicitly passed selector\n//\n// * selector - a CSS selector for the element that should have focus\n//\nconst assignFocus = selector => {\n  const element =\n    selector && selector.nodeType === Node.ELEMENT_NODE\n      ? selector\n      : document.querySelector(selector)\n  const focusElement = element || ActiveElement.element\n  if (focusElement && focusElement.focus) focusElement.focus()\n}\n\n// Dispatches an event on the passed element\n//\n// * element - the element\n// * name - the name of the event\n// * detail - the event detail\n//\nconst dispatch = (element, name, detail = {}) => {\n  const init = { bubbles: true, cancelable: true, detail: detail }\n  const evt = new CustomEvent(name, init)\n  element.dispatchEvent(evt)\n  if (window.jQuery) window.jQuery(element).trigger(name, detail)\n}\n\n// Accepts an xPath query and returns the element found at that position in the DOM\n//\nconst xpathToElement = xpath => {\n  return document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE,\n    null\n  ).singleNodeValue\n}\n\n// Accepts an xPath query and returns all matching elements in the DOM\n//\nconst xpathToElementArray = xpath => {\n  const result = document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n  const elements = []\n  for (let i = 0; i < result.snapshotLength; i++)\n    elements.push(result.snapshotItem(i))\n  return elements\n}\n\n// Return an array with the class names to be used\n//\n// * names - could be a string or an array of strings for multiple classes.\n//\nconst getClassNames = names => Array.from(names).flat()\n\n// Perform operation for either the first or all of the elements returned by CSS selector\n//\n// * operation - the instruction payload from perform\n// * callback - the operation function to run for each element\n//\nconst processElements = (operation, callback) => {\n  Array.from(\n    operation.selectAll ? operation.element : [operation.element]\n  ).forEach(callback)\n}\n\n// convert string to kebab-case\n// most other implementations (lodash) are focused on camelCase to kebab-case\n// instead, this uses word token boundaries to produce readable URL slugs and keys\n// this implementation will not support Emoji or other non-ASCII characters\n//\nconst kebabize = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase()\n})\n\nfunction createCompounder (callback) {\n  return function (str) {\n    return words(str).reduce(callback, '')\n  }\n}\n\nconst words = str => {\n  str = str == null ? '' : str\n  return str.match(/([A-Z]{2,}|[0-9]+|[A-Z]?[a-z]+|[A-Z])/g) || []\n}\n\n// Provide a standardized pipeline of checks and modifications to all operations based on provided options\n// Currently skips execution if cancelled and implements an optional delay\n//\nconst operate = (operation, callback) => {\n  if (!operation.cancel) {\n    operation.delay ? setTimeout(callback, operation.delay) : callback()\n    return true\n  }\n  return false\n}\n\n// Dispatch life-cycle events with standardized naming\nconst before = (target, operation) =>\n  dispatch(\n    target,\n    `cable-ready:before-${kebabize(operation.operation)}`,\n    operation\n  )\n\nconst after = (target, operation) =>\n  dispatch(\n    target,\n    `cable-ready:after-${kebabize(operation.operation)}`,\n    operation\n  )\n\nfunction debounce (func, timeout) {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func.apply(this, args), timeout)\n  }\n}\n\nfunction handleErrors (response) {\n  if (!response.ok) throw Error(response.statusText)\n  return response\n}\n\nfunction safeScalar (val) {\n  if (\n    val !== undefined &&\n    !['string', 'number', 'boolean'].includes(typeof val)\n  )\n    console.warn(\n      `Operation expects a string, number or boolean, but got ${val} (${typeof val})`\n    )\n  return val != null ? val : ''\n}\n\nfunction safeString (str) {\n  if (str !== undefined && typeof str !== 'string')\n    console.warn(`Operation expects a string, but got ${str} (${typeof str})`)\n\n  return str != null ? String(str) : ''\n}\n\nfunction safeArray (arr) {\n  if (arr !== undefined && !Array.isArray(arr))\n    console.warn(`Operation expects an array, but got ${arr} (${typeof arr})`)\n  return arr != null ? Array.from(arr) : []\n}\n\nfunction safeObject (obj) {\n  if (obj !== undefined && typeof obj !== 'object')\n    console.warn(`Operation expects an object, but got ${obj} (${typeof obj})`)\n  return obj != null ? Object(obj) : {}\n}\n\nfunction safeStringOrArray (elem) {\n  if (elem !== undefined && !Array.isArray(elem) && typeof elem !== 'string')\n    console.warn(`Operation expects an Array or a String, but got ${elem} (${typeof elem})`)\n\n  return elem == null ? '' : Array.isArray(elem) ? Array.from(elem) : String(elem)\n}\n\nfunction fragmentToString (fragment) {\n  return new XMLSerializer().serializeToString(fragment)\n}\n\n// A proxy method to wrap a fetch call in error handling\n//\n// * url - the URL to fetch\n// * additionalHeaders - an object of additional headers passed to fetch\n//\nasync function graciouslyFetch (url, additionalHeaders) {\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'X-REQUESTED-WITH': 'XmlHttpRequest',\n        ...additionalHeaders\n      }\n    })\n    if (response == undefined) return\n\n    handleErrors(response)\n\n    return response\n  } catch (e) {\n    console.error(`Could not fetch ${url}`)\n  }\n}\n\nexport {\n  isTextInput,\n  assignFocus,\n  dispatch,\n  xpathToElement,\n  xpathToElementArray,\n  getClassNames,\n  processElements,\n  operate,\n  before,\n  after,\n  debounce,\n  handleErrors,\n  graciouslyFetch,\n  kebabize,\n  safeScalar,\n  safeString,\n  safeArray,\n  safeObject,\n  safeStringOrArray,\n  fragmentToString\n}\n","const plugins = {}\n\nconst pluginStore = new Proxy(plugins, {\n  get: (target, name) => {\n    return name in target\n      ? target[name]\n      : () => {\n          console.error(\n            `CableReady: No plugin registered for ${name}. Make sure to call CableReady.registerPlugin during initialization. For example:\\n\\nimport CableReady from 'cable_ready'\\nimport ${name} from '${name}'\\nCableReady.registerPlugin('${name}', ${name})`\n          )\n        }\n  }\n})\n\nconst register = (plugin, func) => {\n  plugins[plugin] = func\n}\n\nexport { register }\nexport default pluginStore\n","import { mutableTags } from './enums'\nimport { isTextInput } from './utils'\nimport ActiveElement from './active_element'\n\n// Indicates whether or not we should morph an element via onBeforeElUpdated callback\n// SEE: https://github.com/patrick-steele-idem/morphdom#morphdomfromnode-tonode-options--node\n//\nconst shouldMorph = operation => (fromEl, toEl) => {\n  return !shouldMorphCallbacks\n    .map(callback => {\n      return typeof callback === 'function'\n        ? callback(operation, fromEl, toEl)\n        : true\n    })\n    .includes(false)\n}\n\n// Execute any pluggable functions that modify elements after morphing via onElUpdated callback\n//\nconst didMorph = operation => el => {\n  didMorphCallbacks.forEach(callback => {\n    if (typeof callback === 'function') callback(operation, el)\n  })\n}\n\nconst verifyNotMutable = (detail, fromEl, toEl) => {\n  // Skip nodes that are equal:\n  // https://github.com/patrick-steele-idem/morphdom#can-i-make-morphdom-blaze-through-the-dom-tree-even-faster-yes\n  if (!mutableTags[fromEl.tagName] && fromEl.isEqualNode(toEl)) return false\n  return true\n}\n\nconst verifyNotContentEditable = (detail, fromEl, toEl) => {\n  if (fromEl === ActiveElement.element && fromEl.isContentEditable) return false\n  return true\n}\n\nconst verifyNotPermanent = (detail, fromEl, toEl) => {\n  const { permanentAttributeName } = detail\n  if (!permanentAttributeName) return true\n\n  const permanent = fromEl.closest(`[${permanentAttributeName}]`)\n\n  // only morph attributes on the active non-permanent text input\n  if (!permanent && fromEl === ActiveElement.element && isTextInput(fromEl)) {\n    const ignore = { value: true }\n    Array.from(toEl.attributes).forEach(attribute => {\n      if (!ignore[attribute.name])\n        fromEl.setAttribute(attribute.name, attribute.value)\n    })\n    return false\n  }\n\n  return !permanent\n}\n\nconst shouldMorphCallbacks = [\n  verifyNotMutable,\n  verifyNotPermanent,\n  verifyNotContentEditable\n]\nconst didMorphCallbacks = []\n\nexport {\n  shouldMorphCallbacks,\n  didMorphCallbacks,\n  shouldMorph,\n  didMorph,\n  verifyNotMutable,\n  verifyNotContentEditable,\n  verifyNotPermanent\n}\n","import Plugins from './plugins'\nimport { shouldMorph, didMorph } from './morph_callbacks'\nimport {\n  assignFocus,\n  dispatch,\n  getClassNames,\n  processElements,\n  before,\n  after,\n  operate,\n  safeScalar,\n  safeString,\n  safeArray,\n  safeObject,\n  safeStringOrArray\n} from './utils'\n\nexport default {\n  // DOM Mutations\n\n  append: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.insertAdjacentHTML('beforeend', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  graft: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { parent, focusSelector } = operation\n        const parentElement = document.querySelector(parent)\n        if (parentElement) {\n          parentElement.appendChild(element)\n          assignFocus(focusSelector)\n        }\n      })\n      after(element, operation)\n    })\n  },\n\n  innerHtml: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.innerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  insertAdjacentHtml: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, position, focusSelector } = operation\n        element.insertAdjacentHTML(position || 'beforeend', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  insertAdjacentText: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { text, position, focusSelector } = operation\n        element.insertAdjacentText(position || 'beforeend', safeScalar(text))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  outerHtml: operation => {\n    processElements(operation, element => {\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.outerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  prepend: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.insertAdjacentHTML('afterbegin', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  remove: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { focusSelector } = operation\n        element.remove()\n        assignFocus(focusSelector)\n      })\n      after(document, operation)\n    })\n  },\n\n  replace: operation => {\n    processElements(operation, element => {\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.outerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  textContent: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { text, focusSelector } = operation\n        element.textContent = safeScalar(text)\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  // Element Property Mutations\n\n  addCssClass: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.classList.add(...getClassNames([safeStringOrArray(name)]))\n      })\n      after(element, operation)\n    })\n  },\n\n  removeAttribute: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.removeAttribute(safeString(name))\n      })\n      after(element, operation)\n    })\n  },\n\n  removeCssClass: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.classList.remove(...getClassNames([safeStringOrArray(name)]))\n        if (element.classList.length === 0) element.removeAttribute('class')\n      })\n      after(element, operation)\n    })\n  },\n\n  setAttribute: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.setAttribute(safeString(name), safeScalar(value))\n      })\n      after(element, operation)\n    })\n  },\n\n  setDatasetProperty: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.dataset[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setProperty: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        if (name in element) element[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setStyle: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.style[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setStyles: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { styles } = operation\n        for (let [name, value] of Object.entries(styles))\n          element.style[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setValue: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { value } = operation\n        element.value = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  // DOM Events and Meta-Operations\n\n  dispatchEvent: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, detail } = operation\n        dispatch(element, safeString(name), safeObject(detail))\n      })\n      after(element, operation)\n    })\n  },\n\n  invokeMethod: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        let firstObjectInChain\n        const { element, receiver, method, args } = operation\n        const chain = safeString(method).split('.')\n\n        switch (receiver) {\n          case 'window':\n            firstObjectInChain = window\n            break\n          case 'document':\n            firstObjectInChain = document\n            break\n          default:\n            firstObjectInChain = element\n        }\n        let lastObjectInChain = firstObjectInChain\n        const foundMethod = chain.reduce((lastTerm, nextTerm) => {\n          lastObjectInChain = lastTerm\n          return lastTerm[nextTerm] || {}\n        }, firstObjectInChain)\n\n        if (foundMethod instanceof Function) {\n          foundMethod.apply(lastObjectInChain, args || [])\n        } else {\n          console.warn(\n            `CableReady invoke_method operation failed due to missing '${method}' method for:`,\n            firstObjectInChain\n          )\n        }\n      })\n      after(element, operation)\n    })\n  },\n\n  setMeta: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { name, content } = operation\n      let meta = document.head.querySelector(`meta[name='${name}']`)\n      if (!meta) {\n        meta = document.createElement('meta')\n        meta.name = safeString(name)\n        document.head.appendChild(meta)\n      }\n      meta.content = safeScalar(content)\n    })\n    after(document, operation)\n  },\n\n  setTitle: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { title } = operation\n      document.title = safeScalar(title)\n    })\n    after(document, operation)\n  },\n\n  // Browser Manipulations\n\n  clearStorage: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.clear()\n    })\n    after(document, operation)\n  },\n\n  go: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { delta } = operation\n      history.go(delta)\n    })\n    after(window, operation)\n  },\n\n  pushState: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { state, title, url } = operation\n      history.pushState(safeObject(state), safeString(title), safeString(url))\n    })\n    after(window, operation)\n  },\n\n  redirectTo: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      let { url, action, turbo } = operation\n      action = action || 'advance'\n      url = safeString(url)\n      if (turbo === undefined) turbo = true\n\n      if (turbo) {\n        if (window.Turbo) window.Turbo.visit(url, { action })\n        if (window.Turbolinks) window.Turbolinks.visit(url, { action })\n        if (!window.Turbo && !window.Turbolinks) window.location.href = url\n      } else {\n        window.location.href = url\n      }\n    })\n    after(window, operation)\n  },\n\n  reload: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      window.location.reload()\n    })\n    after(window, operation)\n  },\n\n  removeStorageItem: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { key, type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.removeItem(safeString(key))\n    })\n    after(document, operation)\n  },\n\n  replaceState: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { state, title, url } = operation\n      history.replaceState(\n        safeObject(state),\n        safeString(title),\n        safeString(url)\n      )\n    })\n    after(window, operation)\n  },\n\n  scrollIntoView: operation => {\n    const { element } = operation\n    before(element, operation)\n    operate(operation, () => {\n      element.scrollIntoView(operation)\n    })\n    after(element, operation)\n  },\n\n  setCookie: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { cookie } = operation\n      document.cookie = safeScalar(cookie)\n    })\n    after(document, operation)\n  },\n\n  setFocus: operation => {\n    const { element } = operation\n    before(element, operation)\n    operate(operation, () => {\n      assignFocus(element)\n    })\n    after(element, operation)\n  },\n\n  setStorageItem: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { key, value, type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.setItem(safeString(key), safeScalar(value))\n    })\n    after(document, operation)\n  },\n\n  // Notifications\n\n  consoleLog: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { message, level } = operation\n      level && ['warn', 'info', 'error'].includes(level)\n        ? console[level](message)\n        : console.log(message)\n    })\n    after(document, operation)\n  },\n\n  consoleTable: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { data, columns } = operation\n      console.table(data, safeArray(columns))\n    })\n    after(document, operation)\n  },\n\n  notification: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { title, options } = operation\n      Notification.requestPermission().then(result => {\n        operation.permission = result\n        if (result === 'granted')\n          new Notification(safeString(title), safeObject(options))\n      })\n    })\n    after(document, operation)\n  },\n\n  // Morph operations\n\n  morph: operation => {\n    // TODO: remove this in 6.0\n    processElements(operation, element => {\n      const { html } = operation\n      const template = document.createElement('template')\n      template.innerHTML = String(safeScalar(html)).trim()\n      operation.content = template.content\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { childrenOnly, focusSelector } = operation\n        Plugins.morphdom(\n          element,\n          childrenOnly ? template.content : template.innerHTML,\n          {\n            childrenOnly: !!childrenOnly,\n            onBeforeElUpdated: shouldMorph(operation),\n            onElUpdated: didMorph(operation)\n          }\n        )\n        assignFocus(focusSelector)\n      })\n      console.warn(\n        'The \"morph\" operation is deprecated in CableReady v5 and will be removed in v6. Use \"morphdom\" or similar instead.'\n      )\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  morphdom: operation => {\n    processElements(operation, element => {\n      const { html } = operation\n      const template = document.createElement('template')\n      template.innerHTML = String(safeScalar(html)).trim()\n      operation.content = template.content\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { childrenOnly, focusSelector } = operation\n        Plugins.morphdom(\n          element,\n          childrenOnly ? template.content : template.innerHTML,\n          {\n            childrenOnly: !!childrenOnly,\n            onBeforeElUpdated: shouldMorph(operation),\n            onElUpdated: didMorph(operation)\n          }\n        )\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  }\n}\n","import Operations from './operations'\n\nlet operations = Operations\n\nconst add = newOperations => {\n  operations = { ...operations, ...newOperations }\n}\n\nconst addOperations = operations => {\n  add(operations)\n}\n\nconst addOperation = (name, operation) => {\n  const operations = {}\n  operations[name] = operation\n\n  add(operations)\n}\n\nexport { addOperation, addOperations }\n\nexport default {\n  get all () {\n    return operations\n  }\n}\n","let missingElement = 'warn'\n\nexport default {\n  get behavior () {\n    return missingElement\n  },\n  set (value) {\n    if (['warn', 'ignore', 'event', 'exception'].includes(value))\n      missingElement = value\n    else\n      console.warn(\"Invalid 'onMissingElement' option. Defaulting to 'warn'.\")\n  }\n}\n","import { xpathToElement, xpathToElementArray, dispatch } from './utils'\nimport ActiveElement from './active_element'\nimport OperationStore from './operation_store'\nimport MissingElement from './missing_element'\n\nconst perform = (\n  operations,\n  options = { onMissingElement: MissingElement.behavior }\n) => {\n  const batches = {}\n  operations.forEach(operation => {\n    if (!!operation.batch)\n      batches[operation.batch] = batches[operation.batch]\n        ? ++batches[operation.batch]\n        : 1\n  })\n  operations.forEach(operation => {\n    const name = operation.operation\n    try {\n      if (operation.selector) {\n        if (operation.xpath) {\n          operation.element = operation.selectAll\n            ? xpathToElementArray(operation.selector)\n            : xpathToElement(operation.selector)\n        } else {\n          operation.element = operation.selectAll\n            ? document.querySelectorAll(operation.selector)\n            : document.querySelector(operation.selector)\n        }\n      } else {\n        operation.element = document\n      }\n      if (operation.element || options.onMissingElement !== 'ignore') {\n        ActiveElement.set(document.activeElement)\n        const cableReadyOperation = OperationStore.all[name]\n\n        if (cableReadyOperation) {\n          cableReadyOperation(operation)\n          if (!!operation.batch && --batches[operation.batch] === 0)\n            dispatch(document, 'cable-ready:batch-complete', {\n              batch: operation.batch\n            })\n        } else {\n          console.error(\n            `CableReady couldn't find the \"${name}\" operation. Make sure you use the camelized form when calling an operation method.`\n          )\n        }\n      }\n    } catch (e) {\n      if (operation.element) {\n        console.error(\n          `CableReady detected an error in ${name || 'operation'}: ${\n            e.message\n          }. If you need to support older browsers make sure you've included the corresponding polyfills. https://docs.stimulusreflex.com/setup#polyfills-for-ie11.`\n        )\n        console.error(e)\n      } else {\n        const warning = `CableReady ${name ||\n          ''} operation failed due to missing DOM element for selector: '${\n          operation.selector\n        }'`\n        switch (options.onMissingElement) {\n          case 'ignore':\n            break\n          case 'event':\n            dispatch(document, 'cable-ready:missing-element', {\n              warning,\n              operation\n            })\n            break\n          case 'exception':\n            throw warning\n          default:\n            console.warn(warning)\n        }\n      }\n    }\n  })\n}\n\nconst performAsync = (\n  operations,\n  options = { onMissingElement: MissingElement.behavior }\n) => {\n  return new Promise((resolve, reject) => {\n    try {\n      resolve(perform(operations, options))\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\nexport { perform, performAsync }\n","let consumer\n\nconst BACKOFF = [25, 50, 75, 100, 200, 250, 500, 800, 1000, 2000]\n\nconst wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nconst getConsumerWithRetry = async (retry = 0) => {\n  if (consumer) return consumer\n\n  if (retry >= BACKOFF.length) {\n    throw new Error(\"Couldn't obtain a Action Cable consumer within 5s\")\n  }\n\n  await wait(BACKOFF[retry])\n\n  return await getConsumerWithRetry(retry + 1)\n}\n\nexport default {\n  setConsumer (value) {\n    consumer = value\n  },\n\n  get consumer () {\n    return consumer\n  },\n\n  async getConsumer () {\n    return await getConsumerWithRetry()\n  }\n}\n","import { perform } from '../cable_ready'\n\nexport default class CableReadyElement extends HTMLElement {\n  static define () {\n    if (!customElements.get('cable-ready')) {\n      customElements.define('cable-ready', this)\n    }\n  }\n\n  connectedCallback () {\n    setTimeout(() => {\n      try {\n        const operations = JSON.parse(this.scriptElement.textContent)\n        perform(operations)\n      } catch (error) {\n        console.error(error)\n      } finally {\n        try {\n          this.remove()\n        } catch {}\n      }\n    })\n  }\n\n  get scriptElement () {\n    if (\n      this.firstElementChild instanceof HTMLScriptElement &&\n      this.firstElementChild.getAttribute('type') === 'application/json'\n    ) {\n      return this.firstElementChild\n    }\n    throw new Error(\n      'First child element in a `<cable-ready>` tag must be `<script type=\"application/json\">`.'\n    )\n  }\n}\n","export default class SubscribingElement extends HTMLElement {\n  disconnectedCallback () {\n    if (this.channel) this.channel.unsubscribe()\n  }\n\n  createSubscription (consumer, channel, receivedCallback) {\n    this.channel = consumer.subscriptions.create(\n      {\n        channel,\n        identifier: this.identifier\n      },\n      {\n        received: receivedCallback\n      }\n    )\n  }\n\n  get preview () {\n    return (\n      document.documentElement.hasAttribute('data-turbolinks-preview') ||\n      document.documentElement.hasAttribute('data-turbo-preview')\n    )\n  }\n\n  get identifier () {\n    return this.getAttribute('identifier')\n  }\n}\n","import { perform } from '../cable_ready'\nimport SubscribingElement from './subscribing_element'\nimport CableConsumer from '../cable_consumer'\nimport MissingElement from '../missing_element'\n\nexport default class StreamFromElement extends SubscribingElement {\n  static define () {\n    if (!customElements.get('stream-from')) {\n      customElements.define('stream-from', this)\n    }\n  }\n\n  async connectedCallback () {\n    if (this.preview) return\n\n    const consumer = await CableConsumer.getConsumer()\n\n    if (consumer) {\n      this.createSubscription(\n        consumer,\n        'CableReady::Stream',\n        this.performOperations.bind(this)\n      )\n    } else {\n      console.error(\n        'The `stream_from` helper cannot connect. You must initialize CableReady with an Action Cable consumer.'\n      )\n    }\n  }\n\n  performOperations (data) {\n    if (data.cableReady)\n      perform(data.operations, { onMissingElement: this.onMissingElement })\n  }\n\n  get onMissingElement () {\n    const value = this.getAttribute('missing') || MissingElement.behavior\n\n    // stream_from does not support raising exceptions on missing elements because there's no way to catch them\n    if (['warn', 'ignore', 'event'].includes(value)) return value\n    else {\n      console.warn(\"Invalid 'missing' attribute. Defaulting to 'warn'.\")\n      return 'warn'\n    }\n  }\n}\n","import Plugins from '../plugins'\nimport SubscribingElement from './subscribing_element'\n\nimport { shouldMorph } from '../morph_callbacks'\nimport { debounce, assignFocus, dispatch, graciouslyFetch } from '../utils'\n\nimport ActiveElement from '../active_element'\nimport CableConsumer from '../cable_consumer'\n\nconst template = `\n<style>\n  :host {\n    display: block;\n  }\n</style>\n<slot></slot>\n`\n\nfunction url (element) {\n  return element.hasAttribute('url')\n    ? element.getAttribute('url')\n    : location.href\n}\n\nexport default class UpdatesForElement extends SubscribingElement {\n  static define () {\n    if (!customElements.get('updates-for')) {\n      customElements.define('updates-for', this)\n    }\n  }\n\n  constructor () {\n    super()\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    shadowRoot.innerHTML = template\n  }\n\n  async connectedCallback () {\n    if (this.preview) return\n    this.update = debounce(this.update.bind(this), this.debounce)\n\n    const consumer = await CableConsumer.getConsumer()\n\n    if (consumer) {\n      this.createSubscription(consumer, 'CableReady::Stream', this.update)\n    } else {\n      console.error(\n        'The `updates-for` helper cannot connect. You must initialize CableReady with an Action Cable consumer.'\n      )\n    }\n  }\n\n  async update (data) {\n    const blocks = Array.from(\n      document.querySelectorAll(this.query),\n      element => new Block(element)\n    ).filter(block => block.shouldUpdate(data))\n\n    // first updates-for element in the DOM *at any given moment* updates all of the others\n    if (blocks.length === 0 || blocks[0].element !== this) return\n\n    // hold a reference to the active element so that it can be restored after the morph\n    ActiveElement.set(document.activeElement)\n\n    // store all retrieved HTML in an object keyed by URL to minimize fetch calls\n    this.html = {}\n\n    const uniqueUrls = [...new Set(blocks.map(block => block.url))]\n\n    await Promise.all(\n      uniqueUrls.map(async url => {\n        if (!this.html.hasOwnProperty(url)) {\n          const response = await graciouslyFetch(url, {\n            'X-Cable-Ready': 'update'\n          })\n          this.html[url] = await response.text()\n        }\n      })\n    )\n\n    // track current block index for each URL; referred to as fragments\n    this.index = {}\n\n    blocks.forEach(block => {\n      // if the block's URL is not in the index, initialize it to 0; otherwise, increment it\n      this.index.hasOwnProperty(block.url)\n        ? this.index[block.url]++\n        : (this.index[block.url] = 0)\n\n      block.process(data, this.html, this.index)\n    })\n  }\n\n  get query () {\n    return `updates-for[identifier=\"${this.identifier}\"]`\n  }\n\n  get identifier () {\n    return this.getAttribute('identifier')\n  }\n\n  get debounce () {\n    return this.hasAttribute('debounce')\n      ? parseInt(this.getAttribute('debounce'))\n      : 20\n  }\n}\n\nclass Block {\n  constructor (element) {\n    this.element = element\n  }\n\n  async process (data, html, index) {\n    const blockIndex = index[this.url]\n    const template = document.createElement('template')\n    this.element.setAttribute('updating', 'updating')\n\n    template.innerHTML = String(html[this.url]).trim()\n\n    await this.resolveTurboFrames(template.content)\n\n    const fragments = template.content.querySelectorAll(this.query)\n\n    if (fragments.length <= blockIndex) {\n      console.warn(\n        `Update aborted due to insufficient number of elements. The offending url is ${this.url}.`\n      )\n      return\n    }\n\n    const operation = {\n      element: this.element,\n      html: fragments[blockIndex],\n      permanentAttributeName: 'data-ignore-updates'\n    }\n\n    dispatch(this.element, 'cable-ready:before-update', operation)\n    Plugins.morphdom(this.element, fragments[blockIndex], {\n      childrenOnly: true,\n      onBeforeElUpdated: shouldMorph(operation),\n      onElUpdated: _ => {\n        this.element.removeAttribute('updating')\n        dispatch(this.element, 'cable-ready:after-update', operation)\n        assignFocus(operation.focusSelector)\n      }\n    })\n  }\n\n  async resolveTurboFrames (docFragment) {\n    const reloadingTurboFrames = [\n      ...docFragment.querySelectorAll('turbo-frame[src]:not([loading=\"lazy\"])')\n    ]\n\n    return Promise.all(\n      reloadingTurboFrames.map(frame => {\n        return new Promise(async resolve => {\n          const frameResponse = await graciouslyFetch(\n            frame.getAttribute('src'),\n            {\n              'Turbo-Frame': frame.id,\n              'X-Cable-Ready': 'update'\n            }\n          )\n\n          const frameTemplate = document.createElement('template')\n          frameTemplate.innerHTML = await frameResponse.text()\n\n          // recurse here to get all nested eager loaded frames\n          await this.resolveTurboFrames(frameTemplate.content)\n\n          const selector = `turbo-frame#${frame.id}`\n          const frameContent = frameTemplate.content.querySelector(selector)\n          const content = frameContent ? frameContent.innerHTML.trim() : ''\n\n          docFragment.querySelector(selector).innerHTML = content\n\n          resolve()\n        })\n      })\n    )\n  }\n\n  shouldUpdate (data) {\n    // if everything that could prevent an update is false, update this block\n    return !this.ignoresInnerUpdates && this.hasChangesSelectedForUpdate(data)\n  }\n\n  hasChangesSelectedForUpdate (data) {\n    // if there's an only attribute, only update if at least one of the attributes changed is in the allow list\n    const only = this.element.getAttribute('only')\n\n    return !(\n      only &&\n      data.changed &&\n      !only.split(' ').some(attribute => data.changed.includes(attribute))\n    )\n  }\n\n  get ignoresInnerUpdates () {\n    // don't update during a Reflex or Turbolinks redraw\n    return (\n      this.element.hasAttribute('ignore-inner-updates') &&\n      this.element.hasAttribute('performing-inner-update')\n    )\n  }\n\n  get url () {\n    return this.element.hasAttribute('url')\n      ? this.element.getAttribute('url')\n      : location.href\n  }\n\n  get identifier () {\n    return this.element.identifier\n  }\n\n  get query () {\n    return this.element.query\n  }\n}\n","export const registerInnerUpdates = () => {\n  document.addEventListener('stimulus-reflex:before', event => {\n    recursiveMarkUpdatesForElements(event.detail.element)\n  })\n\n  document.addEventListener('stimulus-reflex:after', event => {\n    setTimeout(() => {\n      recursiveUnmarkUpdatesForElements(event.detail.element)\n    })\n  })\n\n  document.addEventListener('turbo:submit-start', event => {\n    recursiveMarkUpdatesForElements(event.target)\n  })\n\n  document.addEventListener('turbo:submit-end', event => {\n    setTimeout(() => {\n      recursiveUnmarkUpdatesForElements(event.target)\n    })\n  })\n}\n\nconst recursiveMarkUpdatesForElements = leaf => {\n  const closestUpdatesFor =\n    leaf && leaf.parentElement && leaf.parentElement.closest('updates-for')\n  if (closestUpdatesFor) {\n    closestUpdatesFor.setAttribute('performing-inner-update', '')\n    recursiveMarkUpdatesForElements(closestUpdatesFor)\n  }\n}\n\nconst recursiveUnmarkUpdatesForElements = leaf => {\n  const closestUpdatesFor =\n    leaf && leaf.parentElement && leaf.parentElement.closest('updates-for')\n  if (closestUpdatesFor) {\n    closestUpdatesFor.removeAttribute('performing-inner-update')\n    recursiveUnmarkUpdatesForElements(closestUpdatesFor)\n  }\n}\n","import packageInfo from '../package.json'\nimport { perform, performAsync } from './cable_ready'\nimport { initialize } from './elements'\nimport { shouldMorphCallbacks, didMorphCallbacks } from './morph_callbacks'\n\nimport * as Plugins from './plugins'\n\n// TODO: Remove this in v6\n// Kicking the can down the road for now\nimport morphdom from 'morphdom'\nPlugins.register('morphdom', morphdom)\n\nimport * as MorphCallbacks from './morph_callbacks'\nimport * as Utils from './utils'\n\nimport OperationStore, { addOperation, addOperations } from './operation_store'\nimport CableReadyElement from './elements/cable_ready_element'\nimport StreamFromElement from './elements/stream_from_element'\nimport UpdatesForElement from './elements/updates_for_element'\nimport SubscribingElement from './elements/subscribing_element'\nimport CableConsumer from './cable_consumer'\n\nexport {\n  Utils,\n  MorphCallbacks,\n  Plugins,\n  CableReadyElement,\n  StreamFromElement,\n  UpdatesForElement,\n  SubscribingElement\n}\n\nconst global = {\n  perform,\n  performAsync,\n  shouldMorphCallbacks,\n  didMorphCallbacks,\n  initialize,\n  registerPlugin: Plugins.register,\n  addOperation,\n  addOperations,\n  version: packageInfo.version,\n  cable: CableConsumer,\n  get DOMOperations () {\n    console.warn(\n      'DEPRECATED: Please use `CableReady.operations` instead of `CableReady.DOMOperations`'\n    )\n    return OperationStore.all\n  },\n  get operations () {\n    return OperationStore.all\n  },\n  get consumer () {\n    return CableConsumer.consumer\n  }\n}\n\nwindow.CableReady = global\n\nexport default global\n","import CableConsumer from '../cable_consumer'\nimport MissingElement from '../missing_element'\nimport CableReadyElement from './cable_ready_element'\nimport StreamFromElement from './stream_from_element'\nimport UpdatesForElement from './updates_for_element'\n\nimport { registerInnerUpdates } from '../updatable/inner_updates_compat'\n\nconst initialize = (initializeOptions = {}) => {\n  const { consumer, onMissingElement } = initializeOptions\n\n  registerInnerUpdates()\n\n  if (consumer) {\n    CableConsumer.setConsumer(consumer)\n  } else {\n    console.error(\n      'CableReady requires a reference to your Action Cable `consumer` for its helpers to function.\\nEnsure that you have imported the `CableReady` package as well as `consumer` from your `channels` folder, then call `CableReady.initialize({ consumer })`.'\n    )\n  }\n\n  if (onMissingElement) MissingElement.set(onMissingElement)\n\n  CableReadyElement.define()\n  StreamFromElement.define()\n  UpdatesForElement.define()\n}\n\nexport { initialize }\n"],"names":["inputTags","INPUT","TEXTAREA","SELECT","mutableTags","OPTION","textInputTypes","color","date","datetime","email","month","number","password","range","search","tel","text","textarea","time","url","week","activeElement","ActiveElement","element","set","isTextInput","tagName","type","assignFocus","selector","focusElement","nodeType","Node","ELEMENT_NODE","document","querySelector","focus","dispatch","name","detail","evt","CustomEvent","bubbles","cancelable","dispatchEvent","window","jQuery","trigger","xpathToElement","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","xpathToElementArray","result","ORDERED_NODE_SNAPSHOT_TYPE","elements","i","snapshotLength","push","snapshotItem","getClassNames","names","Array","from","flat","processElements","operation","callback","selectAll","forEach","kebabize","word","index","toLowerCase","str","words","reduce","match","operate","cancel","delay","setTimeout","before","target","after","debounce","func","timeout","timer","args","clearTimeout","apply","this","handleErrors","response","ok","Error","statusText","safeScalar","val","undefined","includes","console","warn","safeString","String","safeArray","arr","isArray","safeObject","obj","Object","safeStringOrArray","elem","async","graciouslyFetch","additionalHeaders","fetch","headers","e","error","fragment","XMLSerializer","serializeToString","plugins","pluginStore","Proxy","get","register","plugin","shouldMorph","fromEl","toEl","shouldMorphCallbacks","map","didMorph","el","didMorphCallbacks","verifyNotMutable","isEqualNode","verifyNotContentEditable","isContentEditable","verifyNotPermanent","permanentAttributeName","permanent","closest","ignore","value","attributes","attribute","setAttribute","Operations","append","html","focusSelector","insertAdjacentHTML","graft","parent","parentElement","appendChild","innerHtml","innerHTML","insertAdjacentHtml","position","insertAdjacentText","outerHtml","idx","children","indexOf","outerHTML","documentElement","prepend","remove","replace","textContent","addCssClass","classList","add","removeAttribute","removeCssClass","length","setDatasetProperty","dataset","setProperty","setStyle","style","setStyles","styles","entries","setValue","invokeMethod","firstObjectInChain","receiver","method","chain","split","lastObjectInChain","foundMethod","lastTerm","nextTerm","Function","setMeta","content","meta","head","createElement","setTitle","title","clearStorage","sessionStorage","localStorage","clear","go","delta","history","pushState","state","redirectTo","action","turbo","Turbo","visit","Turbolinks","location","href","reload","removeStorageItem","key","removeItem","replaceState","scrollIntoView","setCookie","cookie","setFocus","setStorageItem","setItem","consoleLog","message","level","log","consoleTable","data","columns","table","notification","options","Notification","requestPermission","then","permission","morph","template","trim","childrenOnly","Plugins","morphdom","onBeforeElUpdated","onElUpdated","operations","newOperations","OperationStore","all","missingElement","MissingElement","behavior","perform","onMissingElement","batches","batch","querySelectorAll","cableReadyOperation","warning","consumer","BACKOFF","getConsumerWithRetry","retry","ms","Promise","resolve","CableConsumer","setConsumer","CableReadyElement","HTMLElement","static","customElements","define","connectedCallback","JSON","parse","scriptElement","firstElementChild","HTMLScriptElement","getAttribute","SubscribingElement","disconnectedCallback","channel","unsubscribe","createSubscription","receivedCallback","subscriptions","create","identifier","received","preview","hasAttribute","StreamFromElement","getConsumer","performOperations","bind","cableReady","UpdatesForElement","constructor","super","attachShadow","mode","update","blocks","query","Block","filter","block","shouldUpdate","uniqueUrls","Set","hasOwnProperty","process","parseInt","blockIndex","resolveTurboFrames","fragments","_","docFragment","reloadingTurboFrames","frame","frameResponse","id","frameTemplate","frameContent","ignoresInnerUpdates","hasChangesSelectedForUpdate","only","changed","some","recursiveMarkUpdatesForElements","leaf","closestUpdatesFor","recursiveUnmarkUpdatesForElements","Plugins.register","global","performAsync","reject","err","initialize","initializeOptions","addEventListener","event","registerPlugin","addOperation","addOperations","version","packageInfo","cable","DOMOperations","CableReady"],"mappings":"gYAAO,MAAMA,EAAY,CACvBC,OAAO,EACPC,UAAU,EACVC,QAAQ,GAGGC,EAAc,CACzBH,OAAO,EACPC,UAAU,EACVG,QAAQ,GAGGC,EAAiB,CAC5B,kBAAkB,EAClB,mBAAmB,EACnB,cAAc,EACdC,OAAO,EACPC,MAAM,EACNC,UAAU,EACVC,OAAO,EACPC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,OAAO,EACPC,QAAQ,EACRC,KAAK,EACLC,MAAM,EACNC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,MAAM,GC9BR,IAAIC,EAEW,IAAAC,EAAA,CACTC,cACF,OAAOF,CACR,EACDG,IAAKD,GACHF,EAAgBE,CACjB,GCHH,MAAME,EAAcF,GACXxB,EAAUwB,EAAQG,UAAYrB,EAAekB,EAAQI,MAOxDC,EAAcC,IAClB,MAIMC,GAHJD,GAAYA,EAASE,WAAaC,KAAKC,aACnCJ,EACAK,SAASC,cAAcN,KACGP,EAAcC,QAC1CO,GAAgBA,EAAaM,OAAON,EAAaM,OAAO,EASxDC,EAAW,CAACd,EAASe,EAAMC,EAAS,CAAA,KACxC,MACMC,EAAM,IAAIC,YAAYH,EADf,CAAEI,SAAS,EAAMC,YAAY,EAAMJ,OAAQA,IAExDhB,EAAQqB,cAAcJ,GAClBK,OAAOC,QAAQD,OAAOC,OAAOvB,GAASwB,QAAQT,EAAMC,EAAO,EAK3DS,EAAiBC,GACdf,SAASgB,SACdD,EACAf,SACA,KACAiB,YAAYC,wBACZ,MACAC,gBAKEC,EAAsBL,IAC1B,MAAMM,EAASrB,SAASgB,SACtBD,EACAf,SACA,KACAiB,YAAYK,2BACZ,MAEIC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAOI,eAAgBD,IACzCD,EAASG,KAAKL,EAAOM,aAAaH,IACpC,OAAOD,GAOHK,EAAgBC,GAASC,MAAMC,KAAKF,GAAOG,OAO3CC,EAAkB,CAACC,EAAWC,KAClCL,MAAMC,KACJG,EAAUE,UAAYF,EAAU7C,QAAU,CAAC6C,EAAU7C,UACrDgD,QAAQF,EAAS,EAQfG,GAIqBH,EAJO,SAAUd,EAAQkB,EAAMC,GACxD,OAAOnB,GAAUmB,EAAQ,IAAM,IAAMD,EAAKE,aAC5C,EAGS,SAAUC,GACf,OAAOC,EAAMD,GAAKE,OAAOT,EAAU,GACpC,GAHH,IAA2BA,EAM3B,MAAMQ,EAAQD,IACZA,EAAa,MAAPA,EAAc,GAAKA,GACdG,MAAM,2CAA6C,GAM1DC,EAAU,CAACZ,EAAWC,KACrBD,EAAUa,SACbb,EAAUc,MAAQC,WAAWd,EAAUD,EAAUc,OAASb,KACnD,GAMLe,EAAS,CAACC,EAAQjB,IACtB/B,EACEgD,EACA,sBAAsBb,EAASJ,EAAUA,aACzCA,GAGEkB,EAAQ,CAACD,EAAQjB,IACrB/B,EACEgD,EACA,qBAAqBb,EAASJ,EAAUA,aACxCA,GAGJ,SAASmB,EAAUC,EAAMC,GACvB,IAAIC,EACJ,MAAO,IAAIC,KACTC,aAAaF,GACbA,EAAQP,YAAW,IAAMK,EAAKK,MAAMC,KAAMH,IAAOF,EAAQ,CAE7D,CAEA,SAASM,EAAcC,GACrB,IAAKA,EAASC,GAAI,MAAMC,MAAMF,EAASG,YACvC,OAAOH,CACT,CAEA,SAASI,EAAYC,GAQnB,YANUC,IAARD,GACC,CAAC,SAAU,SAAU,WAAWE,gBAAgBF,IAEjDG,QAAQC,KACN,0DAA0DJ,aAAeA,MAE/D,MAAPA,EAAcA,EAAM,EAC7B,CAEA,SAASK,EAAY9B,GAInB,YAHY0B,IAAR1B,GAAoC,iBAARA,GAC9B4B,QAAQC,KAAK,uCAAuC7B,aAAeA,MAEvD,MAAPA,EAAc+B,OAAO/B,GAAO,EACrC,CAEA,SAASgC,EAAWC,GAGlB,YAFYP,IAARO,GAAsB7C,MAAM8C,QAAQD,IACtCL,QAAQC,KAAK,uCAAuCI,aAAeA,MACvD,MAAPA,EAAc7C,MAAMC,KAAK4C,GAAO,EACzC,CAEA,SAASE,EAAYC,GAGnB,YAFYV,IAARU,GAAoC,iBAARA,GAC9BR,QAAQC,KAAK,wCAAwCO,aAAeA,MACxD,MAAPA,EAAcC,OAAOD,GAAO,CAAE,CACvC,CAEA,SAASE,EAAmBC,GAI1B,YAHab,IAATa,GAAuBnD,MAAM8C,QAAQK,IAAyB,iBAATA,GACvDX,QAAQC,KAAK,mDAAmDU,aAAgBA,MAEnE,MAARA,EAAe,GAAKnD,MAAM8C,QAAQK,GAAQnD,MAAMC,KAAKkD,GAAQR,OAAOQ,EAC7E,CAWAC,eAAeC,EAAiBlG,EAAKmG,GACnC,IACE,MAAMtB,QAAiBuB,MAAMpG,EAAK,CAChCqG,QAAS,CACP,mBAAoB,oBACjBF,KAGP,GAAgBhB,MAAZN,EAAuB,OAI3B,OAFAD,EAAaC,GAENA,CAGR,CAFC,MAAOyB,GACPjB,QAAQkB,MAAM,mBAAmBvG,IAClC,CACH,+TAzBA,SAA2BwG,GACzB,OAAO,IAAIC,eAAgBC,kBAAkBF,EAC/C,IClLA,MAAMG,EAAU,CAAE,EAEZC,EAAc,IAAIC,MAAMF,EAAS,CACrCG,IAAK,CAAC5C,EAAQ/C,IACLA,KAAQ+C,EACXA,EAAO/C,GACP,KACEkE,QAAQkB,MACN,wCAAwCpF,sIAAyIA,WAAcA,kCAAqCA,OAAUA,KAC/O,IAKL4F,EAAW,CAACC,EAAQ3C,KACxBsC,EAAQK,GAAU3C,CAAI,6DCRxB,MAAM4C,EAAchE,GAAa,CAACiE,EAAQC,KAChCC,EACLC,KAAInE,GACwB,mBAAbA,GACVA,EAASD,EAAWiE,EAAQC,KAGjC/B,UAAS,GAKRkC,EAAWrE,GAAasE,IAC5BC,EAAkBpE,SAAQF,IACA,mBAAbA,GAAyBA,EAASD,EAAWsE,EAAG,GAC3D,EAGEE,EAAmB,CAACrG,EAAQ8F,EAAQC,OAGnCnI,EAAYkI,EAAO3G,UAAY2G,EAAOQ,YAAYP,IAInDQ,EAA2B,CAACvG,EAAQ8F,EAAQC,IAC5CD,IAAW/G,EAAcC,UAAW8G,EAAOU,kBAI3CC,EAAqB,CAACzG,EAAQ8F,EAAQC,KAC1C,MAAMW,uBAAEA,GAA2B1G,EACnC,IAAK0G,EAAwB,OAAO,EAEpC,MAAMC,EAAYb,EAAOc,QAAQ,IAAIF,MAGrC,IAAKC,GAAab,IAAW/G,EAAcC,SAAWE,EAAY4G,GAAS,CACzE,MAAMe,EAAS,CAAEC,OAAO,GAKxB,OAJArF,MAAMC,KAAKqE,EAAKgB,YAAY/E,SAAQgF,IAC7BH,EAAOG,EAAUjH,OACpB+F,EAAOmB,aAAaD,EAAUjH,KAAMiH,EAAUF,MAAM,KAEjD,CACR,CAED,OAAQH,GAGJX,EAAuB,CAC3BK,EACAI,EACAF,GAEIH,EAAoB,gLC5CXc,EAAA,CAGbC,OAAQtF,IACND,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIC,cAAEA,GAAkBxF,EAChC7C,EAAQsI,mBAAmB,YAAazD,EAAWuD,IACnD/H,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJ0F,MAAO1F,IACLD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM2F,OAAEA,EAAMH,cAAEA,GAAkBxF,EAC5B4F,EAAgB9H,SAASC,cAAc4H,GACzCC,IACFA,EAAcC,YAAY1I,GAC1BK,EAAYgI,GACb,IAEHtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJ8F,UAAW9F,IACTD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIC,cAAEA,GAAkBxF,EAChC7C,EAAQ4I,UAAY/D,EAAWuD,GAC/B/H,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJgG,mBAAoBhG,IAClBD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIU,SAAEA,EAAQT,cAAEA,GAAkBxF,EAC1C7C,EAAQsI,mBAAmBQ,GAAY,YAAajE,EAAWuD,IAC/D/H,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJkG,mBAAoBlG,IAClBD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMpD,KAAEA,EAAIqJ,SAAEA,EAAQT,cAAEA,GAAkBxF,EAC1C7C,EAAQ+I,mBAAmBD,GAAY,YAAajE,EAAWpF,IAC/DY,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJmG,UAAWnG,IACTD,EAAgBC,GAAW7C,IACzB,MAAMwI,EAASxI,EAAQyI,cACjBQ,EAAMT,GAAU/F,MAAMC,KAAK8F,EAAOU,UAAUC,QAAQnJ,GAC1D6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIC,cAAEA,GAAkBxF,EAChC7C,EAAQoJ,UAAYvE,EAAWuD,GAC/B/H,EAAYgI,EAAc,IAE5BtE,EAAMyE,EAASA,EAAOU,SAASD,GAAOtI,SAAS0I,gBAAiBxG,EAAU,GAC1E,EAGJyG,QAASzG,IACPD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIC,cAAEA,GAAkBxF,EAChC7C,EAAQsI,mBAAmB,aAAczD,EAAWuD,IACpD/H,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAGJ0G,OAAQ1G,IACND,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMwF,cAAEA,GAAkBxF,EAC1B7C,EAAQuJ,SACRlJ,EAAYgI,EAAc,IAE5BtE,EAAMpD,SAAUkC,EAAU,GAC1B,EAGJ2G,QAAS3G,IACPD,EAAgBC,GAAW7C,IACzB,MAAMwI,EAASxI,EAAQyI,cACjBQ,EAAMT,GAAU/F,MAAMC,KAAK8F,EAAOU,UAAUC,QAAQnJ,GAC1D6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMuF,KAAEA,EAAIC,cAAEA,GAAkBxF,EAChC7C,EAAQoJ,UAAYvE,EAAWuD,GAC/B/H,EAAYgI,EAAc,IAE5BtE,EAAMyE,EAASA,EAAOU,SAASD,GAAOtI,SAAS0I,gBAAiBxG,EAAU,GAC1E,EAGJ4G,YAAa5G,IACXD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMpD,KAAEA,EAAI4I,cAAEA,GAAkBxF,EAChC7C,EAAQyJ,YAAc5E,EAAWpF,GACjCY,EAAYgI,EAAc,IAE5BtE,EAAM/D,EAAS6C,EAAU,GACzB,EAKJ6G,YAAa7G,IACXD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,GAAS8B,EACjB7C,EAAQ2J,UAAUC,OAAOrH,EAAc,CAACoD,EAAkB5E,KAAQ,IAEpEgD,EAAM/D,EAAS6C,EAAU,GACzB,EAGJgH,gBAAiBhH,IACfD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,GAAS8B,EACjB7C,EAAQ6J,gBAAgB1E,EAAWpE,GAAM,IAE3CgD,EAAM/D,EAAS6C,EAAU,GACzB,EAGJiH,eAAgBjH,IACdD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,GAAS8B,EACjB7C,EAAQ2J,UAAUJ,UAAUhH,EAAc,CAACoD,EAAkB5E,MAC5B,IAA7Bf,EAAQ2J,UAAUI,QAAc/J,EAAQ6J,gBAAgB,QAAQ,IAEtE9F,EAAM/D,EAAS6C,EAAU,GACzB,EAGJoF,aAAcpF,IACZD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAI+G,MAAEA,GAAUjF,EACxB7C,EAAQiI,aAAa9C,EAAWpE,GAAO8D,EAAWiD,GAAO,IAE3D/D,EAAM/D,EAAS6C,EAAU,GACzB,EAGJmH,mBAAoBnH,IAClBD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAI+G,MAAEA,GAAUjF,EACxB7C,EAAQiK,QAAQ9E,EAAWpE,IAAS8D,EAAWiD,EAAM,IAEvD/D,EAAM/D,EAAS6C,EAAU,GACzB,EAGJqH,YAAarH,IACXD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAI+G,MAAEA,GAAUjF,EACpB9B,KAAQf,IAASA,EAAQmF,EAAWpE,IAAS8D,EAAWiD,GAAM,IAEpE/D,EAAM/D,EAAS6C,EAAU,GACzB,EAGJsH,SAAUtH,IACRD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAI+G,MAAEA,GAAUjF,EACxB7C,EAAQoK,MAAMjF,EAAWpE,IAAS8D,EAAWiD,EAAM,IAErD/D,EAAM/D,EAAS6C,EAAU,GACzB,EAGJwH,UAAWxH,IACTD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMyH,OAAEA,GAAWzH,EACnB,IAAK,IAAK9B,EAAM+G,KAAUpC,OAAO6E,QAAQD,GACvCtK,EAAQoK,MAAMjF,EAAWpE,IAAS8D,EAAWiD,EAAM,IAEvD/D,EAAM/D,EAAS6C,EAAU,GACzB,EAGJ2H,SAAU3H,IACRD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAMiF,MAAEA,GAAUjF,EAClB7C,EAAQ8H,MAAQjD,EAAWiD,EAAM,IAEnC/D,EAAM/D,EAAS6C,EAAU,GACzB,EAKJxB,cAAewB,IACbD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAIC,OAAEA,GAAW6B,EACzB/B,EAASd,EAASmF,EAAWpE,GAAOyE,EAAWxE,GAAQ,IAEzD+C,EAAM/D,EAAS6C,EAAU,GACzB,EAGJ4H,aAAc5H,IACZD,EAAgBC,GAAW7C,IACzB6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,IAAI6H,EACJ,MAAM1K,QAAEA,EAAO2K,SAAEA,EAAQC,OAAEA,EAAMxG,KAAEA,GAASvB,EACtCgI,EAAQ1F,EAAWyF,GAAQE,MAAM,KAEvC,OAAQH,GACN,IAAK,SACHD,EAAqBpJ,OACrB,MACF,IAAK,WACHoJ,EAAqB/J,SACrB,MACF,QACE+J,EAAqB1K,EAEzB,IAAI+K,EAAoBL,EACxB,MAAMM,EAAcH,EAAMtH,QAAO,CAAC0H,EAAUC,KAC1CH,EAAoBE,EACbA,EAASC,IAAa,CAAE,IAC9BR,GAECM,aAAuBG,SACzBH,EAAY1G,MAAMyG,EAAmB3G,GAAQ,IAE7Ca,QAAQC,KACN,6DAA6D0F,iBAC7DF,EAEH,IAEH3G,EAAM/D,EAAS6C,EAAU,GACzB,EAGJuI,QAASvI,IACPgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAM9B,KAAEA,EAAIsK,QAAEA,GAAYxI,EAC1B,IAAIyI,EAAO3K,SAAS4K,KAAK3K,cAAc,cAAcG,OAChDuK,IACHA,EAAO3K,SAAS6K,cAAc,QAC9BF,EAAKvK,KAAOoE,EAAWpE,GACvBJ,SAAS4K,KAAK7C,YAAY4C,IAE5BA,EAAKD,QAAUxG,EAAWwG,EAAQ,IAEpCtH,EAAMpD,SAAUkC,EAAU,EAG5B4I,SAAU5I,IACRgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAM6I,MAAEA,GAAU7I,EAClBlC,SAAS+K,MAAQ7G,EAAW6G,EAAM,IAEpC3H,EAAMpD,SAAUkC,EAAU,EAK5B8I,aAAc9I,IACZgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAMzC,KAAEA,GAASyC,GACQ,YAATzC,EAAqBwL,eAAiBC,cAC9CC,OAAO,IAEjB/H,EAAMpD,SAAUkC,EAAU,EAG5BkJ,GAAIlJ,IACFgB,EAAOvC,OAAQuB,GACfY,EAAQZ,GAAW,KACjB,MAAMmJ,MAAEA,GAAUnJ,EAClBoJ,QAAQF,GAAGC,EAAM,IAEnBjI,EAAMzC,OAAQuB,EAAU,EAG1BqJ,UAAWrJ,IACTgB,EAAOvC,OAAQuB,GACfY,EAAQZ,GAAW,KACjB,MAAMsJ,MAAEA,EAAKT,MAAEA,EAAK9L,IAAEA,GAAQiD,EAC9BoJ,QAAQC,UAAU1G,EAAW2G,GAAQhH,EAAWuG,GAAQvG,EAAWvF,GAAK,IAE1EmE,EAAMzC,OAAQuB,EAAU,EAG1BuJ,WAAYvJ,IACVgB,EAAOvC,OAAQuB,GACfY,EAAQZ,GAAW,KACjB,IAAIjD,IAAEA,EAAGyM,OAAEA,EAAMC,MAAEA,GAAUzJ,EAC7BwJ,EAASA,GAAU,UACnBzM,EAAMuF,EAAWvF,QACHmF,IAAVuH,IAAqBA,GAAQ,GAE7BA,GACEhL,OAAOiL,OAAOjL,OAAOiL,MAAMC,MAAM5M,EAAK,CAAEyM,WACxC/K,OAAOmL,YAAYnL,OAAOmL,WAAWD,MAAM5M,EAAK,CAAEyM,WACjD/K,OAAOiL,OAAUjL,OAAOmL,aAAYnL,OAAOoL,SAASC,KAAO/M,IAEhE0B,OAAOoL,SAASC,KAAO/M,CACxB,IAEHmE,EAAMzC,OAAQuB,EAAU,EAG1B+J,OAAQ/J,IACNgB,EAAOvC,OAAQuB,GACfY,EAAQZ,GAAW,KACjBvB,OAAOoL,SAASE,QAAQ,IAE1B7I,EAAMzC,OAAQuB,EAAU,EAG1BgK,kBAAmBhK,IACjBgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAMiK,IAAEA,EAAG1M,KAAEA,GAASyC,GACG,YAATzC,EAAqBwL,eAAiBC,cAC9CkB,WAAW5H,EAAW2H,GAAK,IAErC/I,EAAMpD,SAAUkC,EAAU,EAG5BmK,aAAcnK,IACZgB,EAAOvC,OAAQuB,GACfY,EAAQZ,GAAW,KACjB,MAAMsJ,MAAEA,EAAKT,MAAEA,EAAK9L,IAAEA,GAAQiD,EAC9BoJ,QAAQe,aACNxH,EAAW2G,GACXhH,EAAWuG,GACXvG,EAAWvF,GACZ,IAEHmE,EAAMzC,OAAQuB,EAAU,EAG1BoK,eAAgBpK,IACd,MAAM7C,QAAEA,GAAY6C,EACpBgB,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB7C,EAAQiN,eAAepK,EAAU,IAEnCkB,EAAM/D,EAAS6C,EAAU,EAG3BqK,UAAWrK,IACTgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAMsK,OAAEA,GAAWtK,EACnBlC,SAASwM,OAAStI,EAAWsI,EAAO,IAEtCpJ,EAAMpD,SAAUkC,EAAU,EAG5BuK,SAAUvK,IACR,MAAM7C,QAAEA,GAAY6C,EACpBgB,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjBxC,EAAYL,EAAQ,IAEtB+D,EAAM/D,EAAS6C,EAAU,EAG3BwK,eAAgBxK,IACdgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAMiK,IAAEA,EAAGhF,MAAEA,EAAK1H,KAAEA,GAASyC,GACJ,YAATzC,EAAqBwL,eAAiBC,cAC9CyB,QAAQnI,EAAW2H,GAAMjI,EAAWiD,GAAO,IAErD/D,EAAMpD,SAAUkC,EAAU,EAK5B0K,WAAY1K,IACVgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAM2K,QAAEA,EAAOC,MAAEA,GAAU5K,EAC3B4K,GAAS,CAAC,OAAQ,OAAQ,SAASzI,SAASyI,GACxCxI,QAAQwI,GAAOD,GACfvI,QAAQyI,IAAIF,EAAQ,IAE1BzJ,EAAMpD,SAAUkC,EAAU,EAG5B8K,aAAc9K,IACZgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAM+K,KAAEA,EAAIC,QAAEA,GAAYhL,EAC1BoC,QAAQ6I,MAAMF,EAAMvI,EAAUwI,GAAS,IAEzC9J,EAAMpD,SAAUkC,EAAU,EAG5BkL,aAAclL,IACZgB,EAAOlD,SAAUkC,GACjBY,EAAQZ,GAAW,KACjB,MAAM6I,MAAEA,EAAKsC,QAAEA,GAAYnL,EAC3BoL,aAAaC,oBAAoBC,MAAKnM,IACpCa,EAAUuL,WAAapM,EACR,YAAXA,GACF,IAAIiM,aAAa9I,EAAWuG,GAAQlG,EAAWwI,GAAS,GAC1D,IAEJjK,EAAMpD,SAAUkC,EAAU,EAK5BwL,MAAOxL,IAELD,EAAgBC,GAAW7C,IACzB,MAAMoI,KAAEA,GAASvF,EACXyL,EAAW3N,SAAS6K,cAAc,YACxC8C,EAAS1F,UAAYxD,OAAOP,EAAWuD,IAAOmG,OAC9C1L,EAAUwI,QAAUiD,EAASjD,QAC7B,MAAM7C,EAASxI,EAAQyI,cACjBQ,EAAMT,GAAU/F,MAAMC,KAAK8F,EAAOU,UAAUC,QAAQnJ,GAC1D6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM2L,aAAEA,EAAYnG,cAAEA,GAAkBxF,EACxC4L,EAAQC,SACN1O,EACAwO,EAAeF,EAASjD,QAAUiD,EAAS1F,UAC3C,CACE4F,eAAgBA,EAChBG,kBAAmB9H,EAAYhE,GAC/B+L,YAAa1H,EAASrE,KAG1BxC,EAAYgI,EAAc,IAE5BpD,QAAQC,KACN,sHAEFnB,EAAMyE,EAASA,EAAOU,SAASD,GAAOtI,SAAS0I,gBAAiBxG,EAAU,GAC1E,EAGJ6L,SAAU7L,IACRD,EAAgBC,GAAW7C,IACzB,MAAMoI,KAAEA,GAASvF,EACXyL,EAAW3N,SAAS6K,cAAc,YACxC8C,EAAS1F,UAAYxD,OAAOP,EAAWuD,IAAOmG,OAC9C1L,EAAUwI,QAAUiD,EAASjD,QAC7B,MAAM7C,EAASxI,EAAQyI,cACjBQ,EAAMT,GAAU/F,MAAMC,KAAK8F,EAAOU,UAAUC,QAAQnJ,GAC1D6D,EAAO7D,EAAS6C,GAChBY,EAAQZ,GAAW,KACjB,MAAM2L,aAAEA,EAAYnG,cAAEA,GAAkBxF,EACxC4L,EAAQC,SACN1O,EACAwO,EAAeF,EAASjD,QAAUiD,EAAS1F,UAC3C,CACE4F,eAAgBA,EAChBG,kBAAmB9H,EAAYhE,GAC/B+L,YAAa1H,EAASrE,KAG1BxC,EAAYgI,EAAc,IAE5BtE,EAAMyE,EAASA,EAAOU,SAASD,GAAOtI,SAAS0I,gBAAiBxG,EAAU,GAC1E,GCjhBN,IAAIgM,EAAa3G,EAEjB,MAAM0B,EAAMkF,IACVD,EAAa,IAAKA,KAAeC,EAAe,EAgBnC,IAAAC,EAAA,CACTC,UACF,OAAOH,CACR,GCxBH,IAAII,EAAiB,OAEN,IAAAC,EAAA,CACTC,eACF,OAAOF,CACR,EACDhP,IAAK6H,GACC,CAAC,OAAQ,SAAU,QAAS,aAAa9C,SAAS8C,GACpDmH,EAAiBnH,EAEjB7C,QAAQC,KAAK,2DAChB,GCNH,MAAMkK,EAAU,CACdP,EACAb,EAAU,CAAEqB,iBAAkBH,EAAeC,aAE7C,MAAMG,EAAU,CAAE,EAClBT,EAAW7L,SAAQH,IACXA,EAAU0M,QACdD,EAAQzM,EAAU0M,OAASD,EAAQzM,EAAU0M,SACvCD,EAAQzM,EAAU0M,OACpB,EAAC,IAETV,EAAW7L,SAAQH,IACjB,MAAM9B,EAAO8B,EAAUA,UACvB,IAcE,GAbIA,EAAUvC,SACRuC,EAAUnB,MACZmB,EAAU7C,QAAU6C,EAAUE,UAC1BhB,EAAoBc,EAAUvC,UAC9BmB,EAAeoB,EAAUvC,UAE7BuC,EAAU7C,QAAU6C,EAAUE,UAC1BpC,SAAS6O,iBAAiB3M,EAAUvC,UACpCK,SAASC,cAAciC,EAAUvC,UAGvCuC,EAAU7C,QAAUW,SAElBkC,EAAU7C,SAAwC,WAA7BgO,EAAQqB,iBAA+B,CAC9DtP,EAAcE,IAAIU,SAASb,eAC3B,MAAM2P,EAAsBV,EAAeC,IAAIjO,GAE3C0O,GACFA,EAAoB5M,GACdA,EAAU0M,OAAwC,KAA7BD,EAAQzM,EAAU0M,QAC3CzO,EAASH,SAAU,6BAA8B,CAC/C4O,MAAO1M,EAAU0M,SAGrBtK,QAAQkB,MACN,iCAAiCpF,uFAGtC,CA6BF,CA5BC,MAAOmF,GACP,GAAIrD,EAAU7C,QACZiF,QAAQkB,MACN,mCAAmCpF,GAAQ,gBACzCmF,EAAEsH,mKAGNvI,QAAQkB,MAAMD,OACT,CACL,MAAMwJ,EAAU,cAAc3O,GAC5B,iEACA8B,EAAUvC,YAEZ,OAAQ0N,EAAQqB,kBACd,IAAK,SACH,MACF,IAAK,QACHvO,EAASH,SAAU,8BAA+B,CAChD+O,UACA7M,cAEF,MACF,IAAK,YACH,MAAM6M,EACR,QACEzK,QAAQC,KAAKwK,GAElB,CACF,IACD,EC7EJ,IAAIC,EAEJ,MAAMC,EAAU,CAAC,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,IAAK,IAAM,KAItDC,EAAuBhK,MAAOiK,EAAQ,KAC1C,GAAIH,EAAU,OAAOA,EAErB,GAAIG,GAASF,EAAQ7F,OACnB,MAAM,IAAIpF,MAAM,qDANP,IAACoL,EAWZ,aAXYA,EASDH,EAAQE,GATA,IAAIE,SAAQC,GAAWrM,WAAWqM,EAASF,YAWjDF,EAAqBC,EAAQ,EAAC,EAG9B,IAAAI,GAAA,CACbC,YAAarI,GACX6H,EAAW7H,CACZ,EAEG6H,eACF,OAAOA,CACR,EAED9J,YAAkB,eACHgK,KC1BF,MAAMO,WAA0BC,YAC7CC,gBACOC,eAAe7J,IAAI,gBACtB6J,eAAeC,OAAO,cAAejM,KAExC,CAEDkM,oBACE7M,YAAW,KACT,IACE,MAAMiL,EAAa6B,KAAKC,MAAMpM,KAAKqM,cAAcnH,aACjD2F,EAAQP,EAOT,CANC,MAAO1I,GACPlB,QAAQkB,MAAMA,EACtB,CAAgB,QACR,IACE5B,KAAKgF,QACG,CAAR,MAAQ,CACX,IAEJ,CAEGqH,oBACF,GACErM,KAAKsM,6BAA6BC,mBACc,qBAAhDvM,KAAKsM,kBAAkBE,aAAa,QAEpC,OAAOxM,KAAKsM,kBAEd,MAAM,IAAIlM,MACR,2FAEH,EClCY,MAAMqM,WAA2BX,YAC9CY,uBACM1M,KAAK2M,SAAS3M,KAAK2M,QAAQC,aAChC,CAEDC,mBAAoBzB,EAAUuB,EAASG,GACrC9M,KAAK2M,QAAUvB,EAAS2B,cAAcC,OACpC,CACEL,UACAM,WAAYjN,KAAKiN,YAEnB,CACEC,SAAUJ,GAGf,CAEGK,cACF,OACE/Q,SAAS0I,gBAAgBsI,aAAa,4BACtChR,SAAS0I,gBAAgBsI,aAAa,qBAEzC,CAEGH,iBACF,OAAOjN,KAAKwM,aAAa,aAC1B,ECrBY,MAAMa,WAA0BZ,GAC7CV,gBACOC,eAAe7J,IAAI,gBACtB6J,eAAeC,OAAO,cAAejM,KAExC,CAEDsB,0BACE,GAAItB,KAAKmN,QAAS,OAElB,MAAM/B,QAAiBO,GAAc2B,cAEjClC,EACFpL,KAAK6M,mBACHzB,EACA,qBACApL,KAAKuN,kBAAkBC,KAAKxN,OAG9BU,QAAQkB,MACN,yGAGL,CAED2L,kBAAmBlE,GACbA,EAAKoE,YACP5C,EAAQxB,EAAKiB,WAAY,CAAEQ,iBAAkB9K,KAAK8K,kBACrD,CAEGA,uBACF,MAAMvH,EAAQvD,KAAKwM,aAAa,YAAc7B,EAAeC,SAG7D,MAAI,CAAC,OAAQ,SAAU,SAASnK,SAAS8C,GAAeA,GAEtD7C,QAAQC,KAAK,sDACN,OAEV,ECpBY,MAAM+M,WAA0BjB,GAC7CV,gBACOC,eAAe7J,IAAI,gBACtB6J,eAAeC,OAAO,cAAejM,KAExC,CAED2N,cACEC,QACmB5N,KAAK6N,aAAa,CAAEC,KAAM,SAClCzJ,UAzBE,2EA0Bd,CAED/C,0BACE,GAAItB,KAAKmN,QAAS,OAClBnN,KAAK+N,OAAStO,EAASO,KAAK+N,OAAOP,KAAKxN,MAAOA,KAAKP,UAEpD,MAAM2L,QAAiBO,GAAc2B,cAEjClC,EACFpL,KAAK6M,mBAAmBzB,EAAU,qBAAsBpL,KAAK+N,QAE7DrN,QAAQkB,MACN,yGAGL,CAEDN,aAAc+H,GACZ,MAAM2E,EAAS9P,MAAMC,KACnB/B,SAAS6O,iBAAiBjL,KAAKiO,QAC/BxS,GAAW,IAAIyS,GAAMzS,KACrB0S,QAAOC,GAASA,EAAMC,aAAahF,KAGrC,GAAsB,IAAlB2E,EAAOxI,QAAgBwI,EAAO,GAAGvS,UAAYuE,KAAM,OAGvDxE,EAAcE,IAAIU,SAASb,eAG3ByE,KAAK6D,KAAO,CAAE,EAEd,MAAMyK,EAAa,IAAI,IAAIC,IAAIP,EAAOtL,KAAI0L,GAASA,EAAM/S,cAEnDoQ,QAAQhB,IACZ6D,EAAW5L,KAAIpB,UACb,IAAKtB,KAAK6D,KAAK2K,eAAenT,GAAM,CAClC,MAAM6E,QAAiBqB,EAAgBlG,EAAK,CAC1C,gBAAiB,WAEnB2E,KAAK6D,KAAKxI,SAAa6E,EAAShF,MACjC,MAKL8E,KAAKpB,MAAQ,CAAE,EAEfoP,EAAOvP,SAAQ2P,IAEbpO,KAAKpB,MAAM4P,eAAeJ,EAAM/S,KAC5B2E,KAAKpB,MAAMwP,EAAM/S,OAChB2E,KAAKpB,MAAMwP,EAAM/S,KAAO,EAE7B+S,EAAMK,QAAQpF,EAAMrJ,KAAK6D,KAAM7D,KAAKpB,MAAM,GAE7C,CAEGqP,YACF,MAAO,2BAA2BjO,KAAKiN,cACxC,CAEGA,iBACF,OAAOjN,KAAKwM,aAAa,aAC1B,CAEG/M,eACF,OAAOO,KAAKoN,aAAa,YACrBsB,SAAS1O,KAAKwM,aAAa,aAC3B,EACL,EAGH,MAAM0B,GACJP,YAAalS,GACXuE,KAAKvE,QAAUA,CAChB,CAED6F,cAAe+H,EAAMxF,EAAMjF,GACzB,MAAM+P,EAAa/P,EAAMoB,KAAK3E,KACxB0O,EAAW3N,SAAS6K,cAAc,YACxCjH,KAAKvE,QAAQiI,aAAa,WAAY,YAEtCqG,EAAS1F,UAAYxD,OAAOgD,EAAK7D,KAAK3E,MAAM2O,aAEtChK,KAAK4O,mBAAmB7E,EAASjD,SAEvC,MAAM+H,EAAY9E,EAASjD,QAAQmE,iBAAiBjL,KAAKiO,OAEzD,GAAIY,EAAUrJ,QAAUmJ,EAItB,YAHAjO,QAAQC,KACN,+EAA+EX,KAAK3E,QAKxF,MAAMiD,EAAY,CAChB7C,QAASuE,KAAKvE,QACdoI,KAAMgL,EAAUF,GAChBxL,uBAAwB,uBAG1B5G,EAASyD,KAAKvE,QAAS,4BAA6B6C,GACpD4L,EAAQC,SAASnK,KAAKvE,QAASoT,EAAUF,GAAa,CACpD1E,cAAc,EACdG,kBAAmB9H,EAAYhE,GAC/B+L,YAAayE,IACX9O,KAAKvE,QAAQ6J,gBAAgB,YAC7B/I,EAASyD,KAAKvE,QAAS,2BAA4B6C,GACnDxC,EAAYwC,EAAUwF,cAAc,GAGzC,CAEDxC,yBAA0ByN,GACxB,MAAMC,EAAuB,IACxBD,EAAY9D,iBAAiB,2CAGlC,OAAOQ,QAAQhB,IACbuE,EAAqBtM,KAAIuM,GAChB,IAAIxD,SAAQnK,UACjB,MAAM4N,QAAsB3N,EAC1B0N,EAAMzC,aAAa,OACnB,CACE,cAAeyC,EAAME,GACrB,gBAAiB,WAIfC,EAAgBhT,SAAS6K,cAAc,YAC7CmI,EAAc/K,gBAAkB6K,EAAchU,aAGxC8E,KAAK4O,mBAAmBQ,EAActI,SAE5C,MAAM/K,EAAW,eAAekT,EAAME,KAChCE,EAAeD,EAActI,QAAQzK,cAAcN,GACnD+K,EAAUuI,EAAeA,EAAahL,UAAU2F,OAAS,GAE/D+E,EAAY1S,cAAcN,GAAUsI,UAAYyC,EAEhD4E,GAAS,MAIhB,CAED2C,aAAchF,GAEZ,OAAQrJ,KAAKsP,qBAAuBtP,KAAKuP,4BAA4BlG,EACtE,CAEDkG,4BAA6BlG,GAE3B,MAAMmG,EAAOxP,KAAKvE,QAAQ+Q,aAAa,QAEvC,QACEgD,GACAnG,EAAKoG,UACJD,EAAKjJ,MAAM,KAAKmJ,MAAKjM,GAAa4F,EAAKoG,QAAQhP,SAASgD,KAE5D,CAEG6L,0BAEF,OACEtP,KAAKvE,QAAQ2R,aAAa,yBAC1BpN,KAAKvE,QAAQ2R,aAAa,0BAE7B,CAEG/R,UACF,OAAO2E,KAAKvE,QAAQ2R,aAAa,OAC7BpN,KAAKvE,QAAQ+Q,aAAa,OAC1BrE,SAASC,IACd,CAEG6E,iBACF,OAAOjN,KAAKvE,QAAQwR,UACrB,CAEGgB,YACF,OAAOjO,KAAKvE,QAAQwS,KACrB,EC3NI,MAsBD0B,GAAkCC,IACtC,MAAMC,EACJD,GAAQA,EAAK1L,eAAiB0L,EAAK1L,cAAcb,QAAQ,eACvDwM,IACFA,EAAkBnM,aAAa,0BAA2B,IAC1DiM,GAAgCE,GACjC,EAGGC,GAAoCF,IACxC,MAAMC,EACJD,GAAQA,EAAK1L,eAAiB0L,EAAK1L,cAAcb,QAAQ,eACvDwM,IACFA,EAAkBvK,gBAAgB,2BAClCwK,GAAkCD,GACnC,EC3BHE,EAAiB,WAAY5F,EAAAA,SAsBxB,MAAC6F,GAAS,CACbnF,UACAoF,aP8CmB,CACnB3F,EACAb,EAAU,CAAEqB,iBAAkBH,EAAeC,YAEtC,IAAIa,SAAQ,CAACC,EAASwE,KAC3B,IACExE,EAAQb,EAAQP,EAAYb,GAG7B,CAFC,MAAO0G,GACPD,EAAOC,EACR,KOtDH1N,uBACAI,oBACAuN,WC7BiB,CAACC,EAAoB,MACtC,MAAMjF,SAAEA,EAAQN,iBAAEA,GAAqBuF,EFRvCjU,SAASkU,iBAAiB,0BAA0BC,IAClDZ,GAAgCY,EAAM9T,OAAOhB,QAAQ,IAGvDW,SAASkU,iBAAiB,yBAAyBC,IACjDlR,YAAW,KACTyQ,GAAkCS,EAAM9T,OAAOhB,QAAQ,GACvD,IAGJW,SAASkU,iBAAiB,sBAAsBC,IAC9CZ,GAAgCY,EAAMhR,OAAO,IAG/CnD,SAASkU,iBAAiB,oBAAoBC,IAC5ClR,YAAW,KACTyQ,GAAkCS,EAAMhR,OAAO,GAC/C,IELA6L,EACFO,GAAcC,YAAYR,GAE1B1K,QAAQkB,MACN,4PAIAkJ,GAAkBH,EAAejP,IAAIoP,GAEzCe,GAAkBI,SAClBoB,GAAkBpB,SAClByB,GAAkBzB,QAAQ,EDa1BuE,eAAgBT,EAChBU,aT3BmB,CAACjU,EAAM8B,KAC1B,MAAMgM,EAAa,CAAE,EACrBA,EAAW9N,GAAQ8B,EAEnB+G,EAAIiF,EAAW,ESwBfoG,cThCoBpG,IACpBjF,EAAIiF,EAAW,ESgCfqG,QAASC,EACTC,MAAOlF,GACHmF,oBAIF,OAHApQ,QAAQC,KACN,wFAEK6J,EAAeC,GACvB,EACGH,iBACF,OAAOE,EAAeC,GACvB,EACGW,eACF,OAAOO,GAAcP,QACtB,GAGHrO,OAAOgU,WAAaf"}