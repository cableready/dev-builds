{"version":3,"file":"cable_ready.umd.min.js","sources":["../javascript/enums.js","../javascript/active_element.js","../javascript/utils.js","../javascript/morph_callbacks.js","../javascript/operations.js","../javascript/operation_store.js","../javascript/missing_element.js","../javascript/cable_ready.js","../javascript/cable_consumer.js","../javascript/elements/cable_ready_element.js","../javascript/elements/subscribing_element.js","../javascript/elements/stream_from_element.js","../javascript/elements/updates_for_element.js","../javascript/updatable/inner_updates_compat.js","../javascript/index.js","../javascript/elements/index.js"],"sourcesContent":["export const inputTags = {\n  INPUT: true,\n  TEXTAREA: true,\n  SELECT: true\n}\n\nexport const mutableTags = {\n  INPUT: true,\n  TEXTAREA: true,\n  OPTION: true\n}\n\nexport const textInputTypes = {\n  'datetime-local': true,\n  'select-multiple': true,\n  'select-one': true,\n  color: true,\n  date: true,\n  datetime: true,\n  email: true,\n  month: true,\n  number: true,\n  password: true,\n  range: true,\n  search: true,\n  tel: true,\n  text: true,\n  textarea: true,\n  time: true,\n  url: true,\n  week: true\n}\n","let activeElement\n\nexport default {\n  get element () {\n    return activeElement\n  },\n  set (element) {\n    activeElement = element\n  }\n}\n","import { inputTags, textInputTypes } from './enums'\nimport ActiveElement from './active_element'\n\n// Indicates if the passed element is considered a text input.\n//\nconst isTextInput = element => {\n  return inputTags[element.tagName] && textInputTypes[element.type]\n}\n\n// Assigns focus to the appropriate element... preferring the explicitly passed selector\n//\n// * selector - a CSS selector for the element that should have focus\n//\nconst assignFocus = selector => {\n  const element =\n    selector && selector.nodeType === Node.ELEMENT_NODE\n      ? selector\n      : document.querySelector(selector)\n  const focusElement = element || ActiveElement.element\n  if (focusElement && focusElement.focus) focusElement.focus()\n}\n\n// Dispatches an event on the passed element\n//\n// * element - the element\n// * name - the name of the event\n// * detail - the event detail\n//\nconst dispatch = (element, name, detail = {}) => {\n  const init = { bubbles: true, cancelable: true, detail: detail }\n  const evt = new CustomEvent(name, init)\n  element.dispatchEvent(evt)\n  if (window.jQuery) window.jQuery(element).trigger(name, detail)\n}\n\n// Accepts an xPath query and returns the element found at that position in the DOM\n//\nconst xpathToElement = xpath => {\n  return document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.FIRST_ORDERED_NODE_TYPE,\n    null\n  ).singleNodeValue\n}\n\n// Accepts an xPath query and returns all matching elements in the DOM\n//\nconst xpathToElementArray = xpath => {\n  const result = document.evaluate(\n    xpath,\n    document,\n    null,\n    XPathResult.ORDERED_NODE_SNAPSHOT_TYPE,\n    null\n  )\n  const elements = []\n  for (let i = 0; i < result.snapshotLength; i++)\n    elements.push(result.snapshotItem(i))\n  return elements\n}\n\n// Return an array with the class names to be used\n//\n// * names - could be a string or an array of strings for multiple classes.\n//\nconst getClassNames = names => Array.from(names).flat()\n\n// Perform operation for either the first or all of the elements returned by CSS selector\n//\n// * operation - the instruction payload from perform\n// * callback - the operation function to run for each element\n//\nconst processElements = (operation, callback) => {\n  Array.from(\n    operation.selectAll ? operation.element : [operation.element]\n  ).forEach(callback)\n}\n\n// convert string to kebab-case\n// most other implementations (lodash) are focused on camelCase to kebab-case\n// instead, this uses word token boundaries to produce readable URL slugs and keys\n// this implementation will not support Emoji or other non-ASCII characters\n//\nconst kebabize = createCompounder(function (result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase()\n})\n\nfunction createCompounder (callback) {\n  return function (str) {\n    return words(str).reduce(callback, '')\n  }\n}\n\nconst words = str => {\n  str = str == null ? '' : str\n  return str.match(/([A-Z]{2,}|[0-9]+|[A-Z]?[a-z]+|[A-Z])/g) || []\n}\n\n// Provide a standardized pipeline of checks and modifications to all operations based on provided options\n// Currently skips execution if cancelled and implements an optional delay\n//\nconst operate = (operation, callback) => {\n  if (!operation.cancel) {\n    operation.delay ? setTimeout(callback, operation.delay) : callback()\n    return true\n  }\n  return false\n}\n\n// Dispatch life-cycle events with standardized naming\nconst before = (target, operation) =>\n  dispatch(\n    target,\n    `cable-ready:before-${kebabize(operation.operation)}`,\n    operation\n  )\n\nconst after = (target, operation) =>\n  dispatch(\n    target,\n    `cable-ready:after-${kebabize(operation.operation)}`,\n    operation\n  )\n\nfunction debounce (func, timeout) {\n  let timer\n  return (...args) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => func.apply(this, args), timeout)\n  }\n}\n\nfunction handleErrors (response) {\n  if (!response.ok) throw Error(response.statusText)\n  return response\n}\n\nfunction safeScalar (val) {\n  if (\n    val !== undefined &&\n    !['string', 'number', 'boolean'].includes(typeof val)\n  )\n    console.warn(\n      `Operation expects a string, number or boolean, but got ${val} (${typeof val})`\n    )\n  return val != null ? val : ''\n}\n\nfunction safeString (str) {\n  if (str !== undefined && typeof str !== 'string')\n    console.warn(`Operation expects a string, but got ${str} (${typeof str})`)\n\n  return str != null ? String(str) : ''\n}\n\nfunction safeArray (arr) {\n  if (arr !== undefined && !Array.isArray(arr))\n    console.warn(`Operation expects an array, but got ${arr} (${typeof arr})`)\n  return arr != null ? Array.from(arr) : []\n}\n\nfunction safeObject (obj) {\n  if (obj !== undefined && typeof obj !== 'object')\n    console.warn(`Operation expects an object, but got ${obj} (${typeof obj})`)\n  return obj != null ? Object(obj) : {}\n}\n\nfunction safeStringOrArray (elem) {\n  if (elem !== undefined && !Array.isArray(elem) && typeof elem !== 'string')\n    console.warn(`Operation expects an Array or a String, but got ${elem} (${typeof elem})`)\n\n  return elem == null ? '' : Array.isArray(elem) ? Array.from(elem) : String(elem)\n}\n\nfunction fragmentToString (fragment) {\n  return new XMLSerializer().serializeToString(fragment)\n}\n\n// A proxy method to wrap a fetch call in error handling\n//\n// * url - the URL to fetch\n// * additionalHeaders - an object of additional headers passed to fetch\n//\nasync function graciouslyFetch (url, additionalHeaders) {\n  try {\n    const response = await fetch(url, {\n      headers: {\n        'X-REQUESTED-WITH': 'XmlHttpRequest',\n        ...additionalHeaders\n      }\n    })\n    if (response == undefined) return\n\n    handleErrors(response)\n\n    return response\n  } catch (e) {\n    console.error(`Could not fetch ${url}`)\n  }\n}\n\nexport {\n  isTextInput,\n  assignFocus,\n  dispatch,\n  xpathToElement,\n  xpathToElementArray,\n  getClassNames,\n  processElements,\n  operate,\n  before,\n  after,\n  debounce,\n  handleErrors,\n  graciouslyFetch,\n  kebabize,\n  safeScalar,\n  safeString,\n  safeArray,\n  safeObject,\n  safeStringOrArray,\n  fragmentToString\n}\n","import { mutableTags } from './enums'\nimport { isTextInput } from './utils'\nimport ActiveElement from './active_element'\n\n// Indicates whether or not we should morph an element via onBeforeElUpdated callback\n// SEE: https://github.com/patrick-steele-idem/morphdom#morphdomfromnode-tonode-options--node\n//\nconst shouldMorph = operation => (fromEl, toEl) => {\n  return !shouldMorphCallbacks\n    .map(callback => {\n      return typeof callback === 'function'\n        ? callback(operation, fromEl, toEl)\n        : true\n    })\n    .includes(false)\n}\n\n// Execute any pluggable functions that modify elements after morphing via onElUpdated callback\n//\nconst didMorph = operation => el => {\n  didMorphCallbacks.forEach(callback => {\n    if (typeof callback === 'function') callback(operation, el)\n  })\n}\n\nconst verifyNotMutable = (detail, fromEl, toEl) => {\n  // Skip nodes that are equal:\n  // https://github.com/patrick-steele-idem/morphdom#can-i-make-morphdom-blaze-through-the-dom-tree-even-faster-yes\n  if (!mutableTags[fromEl.tagName] && fromEl.isEqualNode(toEl)) return false\n  return true\n}\n\nconst verifyNotContentEditable = (detail, fromEl, toEl) => {\n  if (fromEl === ActiveElement.element && fromEl.isContentEditable) return false\n  return true\n}\n\nconst verifyNotPermanent = (detail, fromEl, toEl) => {\n  const { permanentAttributeName } = detail\n  if (!permanentAttributeName) return true\n\n  const permanent = fromEl.closest(`[${permanentAttributeName}]`)\n\n  // only morph attributes on the active non-permanent text input\n  if (!permanent && fromEl === ActiveElement.element && isTextInput(fromEl)) {\n    const ignore = { value: true }\n    Array.from(toEl.attributes).forEach(attribute => {\n      if (!ignore[attribute.name])\n        fromEl.setAttribute(attribute.name, attribute.value)\n    })\n    return false\n  }\n\n  return !permanent\n}\n\nconst shouldMorphCallbacks = [\n  verifyNotMutable,\n  verifyNotPermanent,\n  verifyNotContentEditable\n]\nconst didMorphCallbacks = []\n\nexport {\n  shouldMorphCallbacks,\n  didMorphCallbacks,\n  shouldMorph,\n  didMorph,\n  verifyNotMutable,\n  verifyNotContentEditable,\n  verifyNotPermanent\n}\n","import morphdom from 'morphdom'\nimport { shouldMorph, didMorph } from './morph_callbacks'\nimport {\n  assignFocus,\n  dispatch,\n  getClassNames,\n  processElements,\n  before,\n  after,\n  operate,\n  safeScalar,\n  safeString,\n  safeArray,\n  safeObject,\n  safeStringOrArray\n} from './utils'\n\nexport default {\n  // DOM Mutations\n\n  append: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.insertAdjacentHTML('beforeend', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  graft: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { parent, focusSelector } = operation\n        const parentElement = document.querySelector(parent)\n        if (parentElement) {\n          parentElement.appendChild(element)\n          assignFocus(focusSelector)\n        }\n      })\n      after(element, operation)\n    })\n  },\n\n  innerHtml: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.innerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  insertAdjacentHtml: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, position, focusSelector } = operation\n        element.insertAdjacentHTML(position || 'beforeend', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  insertAdjacentText: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { text, position, focusSelector } = operation\n        element.insertAdjacentText(position || 'beforeend', safeScalar(text))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  morph: operation => {\n    processElements(operation, element => {\n      const { html } = operation\n      const template = document.createElement('template')\n      template.innerHTML = String(safeScalar(html)).trim()\n      operation.content = template.content\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { childrenOnly, focusSelector } = operation\n        morphdom(\n          element,\n          childrenOnly ? template.content : template.innerHTML,\n          {\n            childrenOnly: !!childrenOnly,\n            onBeforeElUpdated: shouldMorph(operation),\n            onElUpdated: didMorph(operation)\n          }\n        )\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  outerHtml: operation => {\n    processElements(operation, element => {\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.outerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  prepend: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.insertAdjacentHTML('afterbegin', safeScalar(html))\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  remove: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { focusSelector } = operation\n        element.remove()\n        assignFocus(focusSelector)\n      })\n      after(document, operation)\n    })\n  },\n\n  replace: operation => {\n    processElements(operation, element => {\n      const parent = element.parentElement\n      const idx = parent && Array.from(parent.children).indexOf(element)\n      before(element, operation)\n      operate(operation, () => {\n        const { html, focusSelector } = operation\n        element.outerHTML = safeScalar(html)\n        assignFocus(focusSelector)\n      })\n      after(parent ? parent.children[idx] : document.documentElement, operation)\n    })\n  },\n\n  textContent: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { text, focusSelector } = operation\n        element.textContent = safeScalar(text)\n        assignFocus(focusSelector)\n      })\n      after(element, operation)\n    })\n  },\n\n  // Element Property Mutations\n\n  addCssClass: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.classList.add(...getClassNames([safeStringOrArray(name)]))\n      })\n      after(element, operation)\n    })\n  },\n\n  removeAttribute: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.removeAttribute(safeString(name))\n      })\n      after(element, operation)\n    })\n  },\n\n  removeCssClass: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name } = operation\n        element.classList.remove(...getClassNames([safeStringOrArray(name)]))\n        if (element.classList.length === 0) element.removeAttribute('class')\n      })\n      after(element, operation)\n    })\n  },\n\n  setAttribute: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.setAttribute(safeString(name), safeScalar(value))\n      })\n      after(element, operation)\n    })\n  },\n\n  setDatasetProperty: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.dataset[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setProperty: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        if (name in element) element[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setStyle: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, value } = operation\n        element.style[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setStyles: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { styles } = operation\n        for (let [name, value] of Object.entries(styles))\n          element.style[safeString(name)] = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  setValue: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { value } = operation\n        element.value = safeScalar(value)\n      })\n      after(element, operation)\n    })\n  },\n\n  // DOM Events and Meta-Operations\n\n  dispatchEvent: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        const { name, detail } = operation\n        dispatch(element, safeString(name), safeObject(detail))\n      })\n      after(element, operation)\n    })\n  },\n\n  invokeMethod: operation => {\n    processElements(operation, element => {\n      before(element, operation)\n      operate(operation, () => {\n        let firstObjectInChain\n        const { element, receiver, method, args } = operation\n        const chain = safeString(method).split('.')\n\n        switch (receiver) {\n          case 'window':\n            firstObjectInChain = window\n            break\n          case 'document':\n            firstObjectInChain = document\n            break\n          default:\n            firstObjectInChain = element\n        }\n        let lastObjectInChain = firstObjectInChain\n        const foundMethod = chain.reduce((lastTerm, nextTerm) => {\n          lastObjectInChain = lastTerm\n          return lastTerm[nextTerm] || {}\n        }, firstObjectInChain)\n\n        if (foundMethod instanceof Function) {\n          foundMethod.apply(lastObjectInChain, args || [])\n        } else {\n          console.warn(\n            `CableReady invoke_method operation failed due to missing '${method}' method for:`,\n            firstObjectInChain\n          )\n        }\n      })\n      after(element, operation)\n    })\n  },\n\n  setMeta: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { name, content } = operation\n      let meta = document.head.querySelector(`meta[name='${name}']`)\n      if (!meta) {\n        meta = document.createElement('meta')\n        meta.name = safeString(name)\n        document.head.appendChild(meta)\n      }\n      meta.content = safeScalar(content)\n    })\n    after(document, operation)\n  },\n\n  setTitle: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { title } = operation\n      document.title = safeScalar(title)\n    })\n    after(document, operation)\n  },\n\n  // Browser Manipulations\n\n  clearStorage: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.clear()\n    })\n    after(document, operation)\n  },\n\n  go: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { delta } = operation\n      history.go(delta)\n    })\n    after(window, operation)\n  },\n\n  pushState: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { state, title, url } = operation\n      history.pushState(safeObject(state), safeString(title), safeString(url))\n    })\n    after(window, operation)\n  },\n\n  redirectTo: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      let { url, action, turbo } = operation\n      action = action || 'advance'\n      url = safeString(url)\n      if (turbo === undefined) turbo = true\n\n      if (turbo) {\n        if (window.Turbo) window.Turbo.visit(url, { action })\n        if (window.Turbolinks) window.Turbolinks.visit(url, { action })\n        if (!window.Turbo && !window.Turbolinks) window.location.href = url\n      } else {\n        window.location.href = url\n      }\n    })\n    after(window, operation)\n  },\n\n  reload: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      window.location.reload()\n    })\n    after(window, operation)\n  },\n\n  removeStorageItem: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { key, type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.removeItem(safeString(key))\n    })\n    after(document, operation)\n  },\n\n  replaceState: operation => {\n    before(window, operation)\n    operate(operation, () => {\n      const { state, title, url } = operation\n      history.replaceState(\n        safeObject(state),\n        safeString(title),\n        safeString(url)\n      )\n    })\n    after(window, operation)\n  },\n\n  scrollIntoView: operation => {\n    const { element } = operation\n    before(element, operation)\n    operate(operation, () => {\n      element.scrollIntoView(operation)\n    })\n    after(element, operation)\n  },\n\n  setCookie: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { cookie } = operation\n      document.cookie = safeScalar(cookie)\n    })\n    after(document, operation)\n  },\n\n  setFocus: operation => {\n    const { element } = operation\n    before(element, operation)\n    operate(operation, () => {\n      assignFocus(element)\n    })\n    after(element, operation)\n  },\n\n  setStorageItem: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { key, value, type } = operation\n      const storage = type === 'session' ? sessionStorage : localStorage\n      storage.setItem(safeString(key), safeScalar(value))\n    })\n    after(document, operation)\n  },\n\n  // Notifications\n\n  consoleLog: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { message, level } = operation\n      level && ['warn', 'info', 'error'].includes(level)\n        ? console[level](message)\n        : console.log(message)\n    })\n    after(document, operation)\n  },\n\n  consoleTable: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { data, columns } = operation\n      console.table(data, safeArray(columns))\n    })\n    after(document, operation)\n  },\n\n  notification: operation => {\n    before(document, operation)\n    operate(operation, () => {\n      const { title, options } = operation\n      Notification.requestPermission().then(result => {\n        operation.permission = result\n        if (result === 'granted')\n          new Notification(safeString(title), safeObject(options))\n      })\n    })\n    after(document, operation)\n  }\n}\n","import Operations from './operations'\n\nlet operations = Operations\n\nconst add = newOperations => {\n  operations = { ...operations, ...newOperations }\n}\n\nconst addOperations = operations => {\n  add(operations)\n}\n\nconst addOperation = (name, operation) => {\n  const operations = {}\n  operations[name] = operation\n\n  add(operations)\n}\n\nexport { addOperation, addOperations }\n\nexport default {\n  get all () {\n    return operations\n  }\n}\n","let missingElement = 'warn'\n\nexport default {\n  get behavior () {\n    return missingElement\n  },\n  set (value) {\n    if (['warn', 'ignore', 'event', 'exception'].includes(value))\n      missingElement = value\n    else\n      console.warn(\"Invalid 'onMissingElement' option. Defaulting to 'warn'.\")\n  }\n}\n","import { xpathToElement, xpathToElementArray, dispatch } from './utils'\nimport ActiveElement from './active_element'\nimport OperationStore from './operation_store'\nimport MissingElement from './missing_element'\n\nconst perform = (\n  operations,\n  options = { onMissingElement: MissingElement.behavior }\n) => {\n  const batches = {}\n  operations.forEach(operation => {\n    if (!!operation.batch)\n      batches[operation.batch] = batches[operation.batch]\n        ? ++batches[operation.batch]\n        : 1\n  })\n  operations.forEach(operation => {\n    const name = operation.operation\n    try {\n      if (operation.selector) {\n        if (operation.xpath) {\n          operation.element = operation.selectAll\n            ? xpathToElementArray(operation.selector)\n            : xpathToElement(operation.selector)\n        } else {\n          operation.element = operation.selectAll\n            ? document.querySelectorAll(operation.selector)\n            : document.querySelector(operation.selector)\n        }\n      } else {\n        operation.element = document\n      }\n      if (operation.element || options.onMissingElement !== 'ignore') {\n        ActiveElement.set(document.activeElement)\n        const cableReadyOperation = OperationStore.all[name]\n\n        if (cableReadyOperation) {\n          cableReadyOperation(operation)\n          if (!!operation.batch && --batches[operation.batch] === 0)\n            dispatch(document, 'cable-ready:batch-complete', {\n              batch: operation.batch\n            })\n        } else {\n          console.error(\n            `CableReady couldn't find the \"${name}\" operation. Make sure you use the camelized form when calling an operation method.`\n          )\n        }\n      }\n    } catch (e) {\n      if (operation.element) {\n        console.error(\n          `CableReady detected an error in ${name || 'operation'}: ${\n            e.message\n          }. If you need to support older browsers make sure you've included the corresponding polyfills. https://docs.stimulusreflex.com/setup#polyfills-for-ie11.`\n        )\n        console.error(e)\n      } else {\n        const warning = `CableReady ${name ||\n          ''} operation failed due to missing DOM element for selector: '${\n          operation.selector\n        }'`\n        switch (options.onMissingElement) {\n          case 'ignore':\n            break\n          case 'event':\n            dispatch(document, 'cable-ready:missing-element', {\n              warning,\n              operation\n            })\n            break\n          case 'exception':\n            throw warning\n          default:\n            console.warn(warning)\n        }\n      }\n    }\n  })\n}\n\nconst performAsync = (\n  operations,\n  options = { onMissingElement: MissingElement.behavior }\n) => {\n  return new Promise((resolve, reject) => {\n    try {\n      resolve(perform(operations, options))\n    } catch (err) {\n      reject(err)\n    }\n  })\n}\n\nexport { perform, performAsync }\n","let consumer\n\nconst BACKOFF = [25, 50, 75, 100, 200, 250, 500, 800, 1000, 2000]\n\nconst wait = (ms) => new Promise(resolve => setTimeout(resolve, ms))\n\nconst getConsumerWithRetry = async (retry = 0) => {\n  if (consumer) return consumer\n\n  if (retry >= BACKOFF.length) {\n    throw new Error(\"Couldn't obtain a Action Cable consumer within 5s\")\n  }\n\n  await wait(BACKOFF[retry])\n\n  return await getConsumerWithRetry(retry + 1)\n}\n\nexport default {\n  setConsumer (value) {\n    consumer = value\n  },\n\n  get consumer () {\n    return consumer\n  },\n\n  async getConsumer () {\n    return await getConsumerWithRetry()\n  }\n}\n","import { perform } from '../cable_ready'\n\nexport default class CableReadyElement extends HTMLElement {\n  static define () {\n    if (!customElements.get('cable-ready')) {\n      customElements.define('cable-ready', this)\n    }\n  }\n\n  connectedCallback () {\n    setTimeout(() => {\n      try {\n        const operations = JSON.parse(this.scriptElement.textContent)\n        perform(operations)\n      } catch (error) {\n        console.error(error)\n      } finally {\n        try {\n          this.remove()\n        } catch {}\n      }\n    })\n  }\n\n  get scriptElement () {\n    if (\n      this.firstElementChild instanceof HTMLScriptElement &&\n      this.firstElementChild.getAttribute('type') === 'application/json'\n    ) {\n      return this.firstElementChild\n    }\n    throw new Error(\n      'First child element in a `<cable-ready>` tag must be `<script type=\"application/json\">`.'\n    )\n  }\n}\n","export default class SubscribingElement extends HTMLElement {\n  disconnectedCallback () {\n    if (this.channel) this.channel.unsubscribe()\n  }\n\n  createSubscription (consumer, channel, receivedCallback) {\n    this.channel = consumer.subscriptions.create(\n      {\n        channel,\n        identifier: this.identifier\n      },\n      {\n        received: receivedCallback\n      }\n    )\n  }\n\n  get preview () {\n    return (\n      document.documentElement.hasAttribute('data-turbolinks-preview') ||\n      document.documentElement.hasAttribute('data-turbo-preview')\n    )\n  }\n\n  get identifier () {\n    return this.getAttribute('identifier')\n  }\n}\n","import { perform } from '../cable_ready'\nimport SubscribingElement from './subscribing_element'\nimport CableConsumer from '../cable_consumer'\nimport MissingElement from '../missing_element'\n\nexport default class StreamFromElement extends SubscribingElement {\n  static define () {\n    if (!customElements.get('stream-from')) {\n      customElements.define('stream-from', this)\n    }\n  }\n\n  async connectedCallback () {\n    if (this.preview) return\n\n    const consumer = await CableConsumer.getConsumer()\n\n    if (consumer) {\n      this.createSubscription(\n        consumer,\n        'CableReady::Stream',\n        this.performOperations.bind(this)\n      )\n    } else {\n      console.error(\n        'The `stream_from` helper cannot connect. You must initialize CableReady with an Action Cable consumer.'\n      )\n    }\n  }\n\n  performOperations (data) {\n    if (data.cableReady)\n      perform(data.operations, { onMissingElement: this.onMissingElement })\n  }\n\n  get onMissingElement () {\n    const value = this.getAttribute('missing') || MissingElement.behavior\n\n    // stream_from does not support raising exceptions on missing elements because there's no way to catch them\n    if (['warn', 'ignore', 'event'].includes(value)) return value\n    else {\n      console.warn(\"Invalid 'missing' attribute. Defaulting to 'warn'.\")\n      return 'warn'\n    }\n  }\n}\n","import morphdom from 'morphdom'\n\nimport SubscribingElement from './subscribing_element'\n\nimport { shouldMorph } from '../morph_callbacks'\nimport { debounce, assignFocus, dispatch, graciouslyFetch } from '../utils'\n\nimport ActiveElement from '../active_element'\nimport CableConsumer from '../cable_consumer'\n\nconst template = `\n<style>\n  :host {\n    display: block;\n  }\n</style>\n<slot></slot>\n`\n\nfunction url (element) {\n  return element.hasAttribute('url')\n    ? element.getAttribute('url')\n    : location.href\n}\n\nexport default class UpdatesForElement extends SubscribingElement {\n  static define () {\n    if (!customElements.get('updates-for')) {\n      customElements.define('updates-for', this)\n    }\n  }\n\n  constructor () {\n    super()\n    const shadowRoot = this.attachShadow({ mode: 'open' })\n    shadowRoot.innerHTML = template\n  }\n\n  async connectedCallback () {\n    if (this.preview) return\n    this.update = debounce(this.update.bind(this), this.debounce)\n\n    const consumer = await CableConsumer.getConsumer()\n\n    if (consumer) {\n      this.createSubscription(consumer, 'CableReady::Stream', this.update)\n    } else {\n      console.error(\n        'The `updates-for` helper cannot connect. You must initialize CableReady with an Action Cable consumer.'\n      )\n    }\n  }\n\n  async update (data) {\n    const blocks = Array.from(\n      document.querySelectorAll(this.query),\n      element => new Block(element)\n    ).filter(block => block.shouldUpdate(data))\n\n    // first updates-for element in the DOM *at any given moment* updates all of the others\n    if (blocks.length === 0 || blocks[0].element !== this) return\n\n    // hold a reference to the active element so that it can be restored after the morph\n    ActiveElement.set(document.activeElement)\n\n    // store all retrieved HTML in an object keyed by URL to minimize fetch calls\n    this.html = {}\n\n    const uniqueUrls = [...new Set(blocks.map(block => block.url))]\n\n    await Promise.all(\n      uniqueUrls.map(async url => {\n        if (!this.html.hasOwnProperty(url)) {\n          const response = await graciouslyFetch(url, {\n            'X-Cable-Ready': 'update'\n          })\n          this.html[url] = await response.text()\n        }\n      })\n    )\n\n    // track current block index for each URL; referred to as fragments\n    this.index = {}\n\n    blocks.forEach(block => {\n      // if the block's URL is not in the index, initialize it to 0; otherwise, increment it\n      this.index.hasOwnProperty(block.url)\n        ? this.index[block.url]++\n        : (this.index[block.url] = 0)\n\n      block.process(data, this.html, this.index)\n    })\n  }\n\n  get query () {\n    return `updates-for[identifier=\"${this.identifier}\"]`\n  }\n\n  get identifier () {\n    return this.getAttribute('identifier')\n  }\n\n  get debounce () {\n    return this.hasAttribute('debounce')\n      ? parseInt(this.getAttribute('debounce'))\n      : 20\n  }\n}\n\nclass Block {\n  constructor (element) {\n    this.element = element\n  }\n\n  async process (data, html, index) {\n    const blockIndex = index[this.url]\n    const template = document.createElement('template')\n    this.element.setAttribute('updating', 'updating')\n\n    template.innerHTML = String(html[this.url]).trim()\n\n    await this.resolveTurboFrames(template.content)\n\n    const fragments = template.content.querySelectorAll(this.query)\n\n    if (fragments.length <= blockIndex) {\n      console.warn(\n        `Update aborted due to insufficient number of elements. The offending url is ${this.url}.`\n      )\n      return\n    }\n\n    const operation = {\n      element: this.element,\n      html: fragments[blockIndex],\n      permanentAttributeName: 'data-ignore-updates'\n    }\n\n    dispatch(this.element, 'cable-ready:before-update', operation)\n    morphdom(this.element, fragments[blockIndex], {\n      childrenOnly: true,\n      onBeforeElUpdated: shouldMorph(operation),\n      onElUpdated: _ => {\n        this.element.removeAttribute('updating')\n        dispatch(this.element, 'cable-ready:after-update', operation)\n        assignFocus(operation.focusSelector)\n      }\n    })\n  }\n\n  async resolveTurboFrames (documentFragment) {\n    const reloadingTurboFrames = [\n      ...documentFragment.querySelectorAll(\n        'turbo-frame[src]:not([loading=\"lazy\"])'\n      )\n    ]\n\n    return Promise.all(\n      reloadingTurboFrames.map(frame => {\n        return new Promise(async resolve => {\n          const frameResponse = await graciouslyFetch(\n            frame.getAttribute('src'),\n            {\n              'Turbo-Frame': frame.id,\n              'X-Cable-Ready': 'update'\n            }\n          )\n\n          const frameTemplate = document.createElement('template')\n          frameTemplate.innerHTML = await frameResponse.text()\n\n          // recurse here to get all nested eager loaded frames\n          await this.resolveTurboFrames(frameTemplate.content)\n\n          documentFragment.querySelector(\n            `turbo-frame#${frame.id}`\n          ).innerHTML = String(\n            frameTemplate.content.querySelector(`turbo-frame#${frame.id}`)\n              .innerHTML\n          ).trim()\n\n          resolve()\n        })\n      })\n    )\n  }\n\n  shouldUpdate (data) {\n    // if everything that could prevent an update is false, update this block\n    return !this.ignoresInnerUpdates && this.hasChangesSelectedForUpdate(data)\n  }\n\n  hasChangesSelectedForUpdate (data) {\n    // if there's an only attribute, only update if at least one of the attributes changed is in the allow list\n    const only = this.element.getAttribute('only')\n\n    return !(\n      only &&\n      data.changed &&\n      !only.split(' ').some(attribute => data.changed.includes(attribute))\n    )\n  }\n\n  get ignoresInnerUpdates () {\n    // don't update during a Reflex or Turbolinks redraw\n    return (\n      this.element.hasAttribute('ignore-inner-updates') &&\n      this.element.hasAttribute('performing-inner-update')\n    )\n  }\n\n  get url () {\n    return this.element.hasAttribute('url')\n      ? this.element.getAttribute('url')\n      : location.href\n  }\n\n  get identifier () {\n    return this.element.identifier\n  }\n\n  get query () {\n    return this.element.query\n  }\n}\n","export const registerInnerUpdates = () => {\n  document.addEventListener('stimulus-reflex:before', event => {\n    recursiveMarkUpdatesForElements(event.detail.element)\n  })\n\n  document.addEventListener('stimulus-reflex:after', event => {\n    setTimeout(() => {\n      recursiveUnmarkUpdatesForElements(event.detail.element)\n    })\n  })\n\n  document.addEventListener('turbo:submit-start', event => {\n    recursiveMarkUpdatesForElements(event.target)\n  })\n\n  document.addEventListener('turbo:submit-end', event => {\n    setTimeout(() => {\n      recursiveUnmarkUpdatesForElements(event.target)\n    })\n  })\n}\n\nconst recursiveMarkUpdatesForElements = leaf => {\n  const closestUpdatesFor =\n    leaf && leaf.parentElement && leaf.parentElement.closest('updates-for')\n  if (closestUpdatesFor) {\n    closestUpdatesFor.setAttribute('performing-inner-update', '')\n    recursiveMarkUpdatesForElements(closestUpdatesFor)\n  }\n}\n\nconst recursiveUnmarkUpdatesForElements = leaf => {\n  const closestUpdatesFor =\n    leaf && leaf.parentElement && leaf.parentElement.closest('updates-for')\n  if (closestUpdatesFor) {\n    closestUpdatesFor.removeAttribute('performing-inner-update')\n    recursiveUnmarkUpdatesForElements(closestUpdatesFor)\n  }\n}\n","import packageInfo from '../package.json'\nimport { perform, performAsync } from './cable_ready'\nimport { initialize } from './elements'\nimport { shouldMorphCallbacks, didMorphCallbacks } from './morph_callbacks'\n\nimport * as MorphCallbacks from './morph_callbacks'\nimport * as Utils from './utils'\n\nimport OperationStore, { addOperation, addOperations } from './operation_store'\nimport CableReadyElement from './elements/cable_ready_element'\nimport StreamFromElement from './elements/stream_from_element'\nimport UpdatesForElement from './elements/updates_for_element'\nimport SubscribingElement from './elements/subscribing_element'\nimport CableConsumer from './cable_consumer'\n\nexport {\n  Utils,\n  MorphCallbacks,\n  CableReadyElement,\n  StreamFromElement,\n  UpdatesForElement,\n  SubscribingElement\n}\n\nconst global = {\n  perform,\n  performAsync,\n  shouldMorphCallbacks,\n  didMorphCallbacks,\n  initialize,\n  addOperation,\n  addOperations,\n  version: packageInfo.version,\n  cable: CableConsumer,\n  get DOMOperations () {\n    console.warn(\n      'DEPRECATED: Please use `CableReady.operations` instead of `CableReady.DOMOperations`'\n    )\n    return OperationStore.all\n  },\n  get operations () {\n    return OperationStore.all\n  },\n  get consumer () {\n    return CableConsumer.consumer\n  }\n}\n\nwindow.CableReady = global\n\nexport default global\n","import CableConsumer from '../cable_consumer'\nimport MissingElement from '../missing_element'\nimport CableReadyElement from './cable_ready_element'\nimport StreamFromElement from './stream_from_element'\nimport UpdatesForElement from './updates_for_element'\n\nimport { registerInnerUpdates } from '../updatable/inner_updates_compat'\n\nconst initialize = (initializeOptions = {}) => {\n  const { consumer, onMissingElement } = initializeOptions\n\n  registerInnerUpdates()\n\n  if (consumer) {\n    CableConsumer.setConsumer(consumer)\n  } else {\n    console.error(\n      'CableReady requires a reference to your Action Cable `consumer` for its helpers to function.\\nEnsure that you have imported the `CableReady` package as well as `consumer` from your `channels` folder, then call `CableReady.initialize({ consumer })`.'\n    )\n  }\n\n  if (onMissingElement) MissingElement.set(onMissingElement)\n\n  CableReadyElement.define()\n  StreamFromElement.define()\n  UpdatesForElement.define()\n}\n\nexport { initialize }\n"],"names":["inputTags","INPUT","TEXTAREA","SELECT","mutableTags","OPTION","textInputTypes","color","date","datetime","email","month","number","password","range","search","tel","text","textarea","time","url","week","activeElement","ActiveElement","element","set","isTextInput","tagName","type","assignFocus","selector","focusElement","nodeType","Node","ELEMENT_NODE","document","querySelector","focus","dispatch","name","detail","evt","CustomEvent","bubbles","cancelable","dispatchEvent","window","jQuery","trigger","xpathToElement","xpath","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","xpathToElementArray","result","ORDERED_NODE_SNAPSHOT_TYPE","elements","i","snapshotLength","push","snapshotItem","getClassNames","names","Array","from","flat","processElements","operation","callback","selectAll","forEach","kebabize","word","index","toLowerCase","str","words","reduce","match","operate","cancel","delay","setTimeout","before","target","after","debounce","func","timeout","timer","args","clearTimeout","apply","this","handleErrors","response","ok","Error","statusText","safeScalar","val","undefined","includes","console","warn","safeString","String","safeArray","arr","isArray","safeObject","obj","Object","safeStringOrArray","elem","async","graciouslyFetch","additionalHeaders","fetch","headers","e","error","fragment","XMLSerializer","serializeToString","shouldMorph","fromEl","toEl","shouldMorphCallbacks","map","didMorph","el","didMorphCallbacks","verifyNotMutable","isEqualNode","verifyNotContentEditable","isContentEditable","verifyNotPermanent","permanentAttributeName","permanent","closest","ignore","value","attributes","attribute","setAttribute","Operations","append","html","focusSelector","insertAdjacentHTML","graft","parent","parentElement","appendChild","innerHtml","innerHTML","insertAdjacentHtml","position","insertAdjacentText","morph","template","createElement","trim","content","idx","children","indexOf","childrenOnly","morphdom","onBeforeElUpdated","onElUpdated","documentElement","outerHtml","outerHTML","prepend","remove","replace","textContent","addCssClass","classList","add","removeAttribute","removeCssClass","length","setDatasetProperty","dataset","setProperty","setStyle","style","setStyles","styles","entries","setValue","invokeMethod","firstObjectInChain","receiver","method","chain","split","lastObjectInChain","foundMethod","lastTerm","nextTerm","Function","setMeta","meta","head","setTitle","title","clearStorage","sessionStorage","localStorage","clear","go","delta","history","pushState","state","redirectTo","action","turbo","Turbo","visit","Turbolinks","location","href","reload","removeStorageItem","key","removeItem","replaceState","scrollIntoView","setCookie","cookie","setFocus","setStorageItem","setItem","consoleLog","message","level","log","consoleTable","data","columns","table","notification","options","Notification","requestPermission","then","permission","operations","newOperations","OperationStore","all","missingElement","MissingElement","behavior","perform","onMissingElement","batches","batch","querySelectorAll","cableReadyOperation","warning","consumer","BACKOFF","getConsumerWithRetry","retry","ms","Promise","resolve","CableConsumer","setConsumer","CableReadyElement","HTMLElement","static","customElements","get","define","connectedCallback","JSON","parse","scriptElement","firstElementChild","HTMLScriptElement","getAttribute","SubscribingElement","disconnectedCallback","channel","unsubscribe","createSubscription","receivedCallback","subscriptions","create","identifier","received","preview","hasAttribute","StreamFromElement","getConsumer","performOperations","bind","cableReady","UpdatesForElement","constructor","super","attachShadow","mode","update","blocks","query","Block","filter","block","shouldUpdate","uniqueUrls","Set","hasOwnProperty","process","parseInt","blockIndex","resolveTurboFrames","fragments","_","documentFragment","reloadingTurboFrames","frame","frameResponse","id","frameTemplate","ignoresInnerUpdates","hasChangesSelectedForUpdate","only","changed","some","recursiveMarkUpdatesForElements","leaf","closestUpdatesFor","recursiveUnmarkUpdatesForElements","global","performAsync","reject","err","initialize","initializeOptions","addEventListener","event","addOperation","addOperations","version","packageInfo","cable","DOMOperations","CableReady"],"mappings":"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"}